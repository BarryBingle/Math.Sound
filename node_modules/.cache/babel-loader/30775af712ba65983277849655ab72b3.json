{"ast":null,"code":"var _jsxFileName = \"/home/james/Documents/Coding Projects/Math.Sound/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { derivative, parse } from 'mathjs';\nimport ReactSlider from 'react-slider';\nimport { create, all } from 'mathjs';\nimport { Col, Container, ListGroup, Row, Nav, Form, Accordion, InputGroup, Button, Card } from 'react-bootstrap'; //#region Graph Actions\n\nlet graphCanvas;\nlet graphContext;\n\nconst math = require('mathjs');\n\nconst Instruments = require('webaudio-instruments');\n\nconst restrictedMath = create(all);\nconst restrictedEvaluate = restrictedMath.evaluate;\nrestrictedMath.import({\n  'import': function () {\n    return;\n  },\n  'createUnit': function () {\n    return;\n  },\n  'evaluate': function () {\n    return;\n  },\n  'parse': function () {\n    return;\n  },\n  'simplify': function () {\n    return;\n  },\n  'derivative': function () {\n    return;\n  }\n}, {\n  override: true\n});\nlet graphObject = {\n  // main object, with all graphCanvas manipulation methods\n  Setup: function () {\n    this.plotsPerScreen = 400; //TODO allow this to change for different processor strengths\n\n    this.numGrids = 20; // number of grid markings\n\n    this.scaleColour = \"#000D34\";\n    graphContext.lineJoin = \"round\";\n\n    if (window.innerWidth < 992) {\n      this.WindowSizeChange(document.getElementById('graphwrapper').getBoundingClientRect().width, window.innerHeight * 0.5);\n    } else {\n      this.WindowSizeChange(window.innerWidth * 0.65, window.innerHeight);\n    }\n  },\n  WindowSizeChange: function (width, height) {\n    graphCanvas.width = width;\n    graphCanvas.height = height;\n    timingCanvas.width = width;\n    timingCanvas.height = height;\n    this.upperLimitX = graphCanvas.width / 2;\n    this.lowerLimitX = -graphCanvas.width / 2;\n    this.upperLimitY = graphCanvas.height / 2;\n    this.lowerLimitY = -graphCanvas.height / 2;\n    this.pointInterval = graphCanvas.width / this.plotsPerScreen; // changes for balance of smoothness of line with time to compute, decrease with more zoom increase with less zoom, by default 1000 plots per screen\n\n    graphContext.setTransform(1, 0, 0, -1, graphCanvas.width / 2, graphCanvas.height / 2); // inverts y-axis in order to increase as you move further up as in the cartesian plane\n\n    this.fontSize = 10;\n    this.functionWidth = \"0.5\";\n    this.minorScaleWidth = \"0.1\";\n    this.zoomRatio = 1; // each pixel equals one unit at the start\n\n    timingContext.lineWidth = 2;\n    timingContext.strokeStyle = \"#56DACC\";\n    this.ChangeDefaultScaling();\n    this.GraphCalculator();\n  },\n\n  ChangeDefaultScaling() {\n    if (this.lowerLimitX < -1000 || this.upperLimitX > 1000) {\n      this.Scale(2000 / (Math.abs(this.upperLimitX) + Math.abs(this.lowerLimitX)));\n    }\n  },\n\n  ExpressionValidifier(exprText, idIndex) {\n    // checks expression before making calculations to avoid wasting resources\n    let exprObject;\n\n    try {\n      // first test is to try and parse the expression\n      exprObject = parse(exprText);\n    } catch {\n      return false;\n    } // second test is to see if all variables are x\n\n\n    let symbolNodes = exprObject.filter(function (node) {\n      return node.isSymbolNode;\n    });\n    let operatorNodes = exprObject.filter(function (node) {\n      return node.isOperatorNode;\n    });\n    let functionNodes = exprObject.filter(function (node) {\n      return node.isFunctionNode;\n    }); // since symbolnodes are used for variables and functions, we must check that all symbolnodes are\n    // either x or a function, also check that no operation is done that has a symbolnode that is not x\n\n    for (let i = 0; i < functionNodes.length; i++) {\n      if (functionNodes[i].args.length < 1) {\n        return false;\n      }\n    }\n\n    if (symbolNodes.length > 0) {\n      for (let i = 0; i < symbolNodes.length; i++) {\n        if (symbolNodes[i].name === 'x' || symbolNodes[i].name in math) {} else {\n          return false;\n        }\n      }\n\n      for (let i = 0; i < operatorNodes.length; i++) {\n        // check that no operation is done with non x symbolnode, otherwise tan * 4 etc would break it\n        if (operatorNodes[i].isBinary()) {\n          if (operatorNodes[i].args[0].isSymbolNode && operatorNodes[i].args[0].name !== 'x') {\n            return false;\n          }\n\n          if (operatorNodes[i].args[1].isSymbolNode && operatorNodes[i].args[1].name !== 'x') {\n            return false;\n          }\n        }\n\n        if (operatorNodes[i].isUnary()) {\n          // protests from x! as no negative factorials allowed\n          if (operatorNodes[i].args[0].isSymbolNode) {\n            return false;\n          }\n        }\n      }\n    } //tests passed, expression valid\n    // get the derivative as well and add it as a property\n\n\n    try {\n      graphObject.expressions[idIndex].derivative = derivative(exprObject, \"x\").toString();\n    } catch {}\n\n    return true;\n  },\n\n  calculate: function (input, expression) {\n    const scope = {\n      x: input\n    };\n    return restrictedEvaluate(expression, scope);\n  },\n  GraphCalculator: function () {\n    // drawing your own graphs \n    this.ClearAll();\n    this.DrawAxes();\n    let curGradient;\n    let prevGradient;\n    let curY;\n    let prevY;\n    let prevPointInterval = this.pointInterval;\n    graphContext.lineWidth = graphObject.functionWidth;\n\n    for (let z = 0; z < this.expressions.length; z++) {\n      let curExpression = this.expressions[z].expr;\n      let curDerivative = this.expressions[z].derivative;\n\n      if (this.expressions[z].validity === true) {\n        graphContext.beginPath();\n        graphContext.strokeStyle = this.expressions[z].colour;\n        graphContext.moveTo(this.expressions[z].domain[0], this.calculate(this.expressions[z].domain[0], curExpression));\n        let lowerLimitOfLoop;\n        let upperLimitOfLoop;\n\n        if (this.expressions[z].domain[0] > this.lowerLimitX) {\n          // checks if domain or edge of canvas is closer and sets it to the limits of the loop\n          lowerLimitOfLoop = this.expressions[z].domain[0];\n        } else {\n          lowerLimitOfLoop = this.lowerLimitX;\n        }\n\n        if (this.expressions[z].domain[1] < this.upperLimitX) {\n          upperLimitOfLoop = this.expressions[z].domain[1];\n        } else {\n          upperLimitOfLoop = this.upperLimitX;\n        }\n\n        for (let i = lowerLimitOfLoop; i < upperLimitOfLoop; i += this.pointInterval) {\n          curY = this.calculate(i, curExpression);\n          curGradient = this.calculate(i, curDerivative);\n\n          if (Math.sign(curGradient) === -1 && Math.sign(prevGradient) === -1 && curY > prevY) {\n            graphContext.lineTo(i, -10000);\n            graphContext.stroke();\n            graphContext.beginPath();\n            graphContext.moveTo(i + 0.001, 10000);\n          } else if (Math.sign(curGradient) === 1 && Math.sign(prevGradient) === 1 && curY < prevY) {\n            graphContext.lineTo(i, 10000);\n            graphContext.stroke();\n            graphContext.beginPath();\n            graphContext.moveTo(i + 0.001, -10000);\n          } else {\n            graphContext.lineTo(i, curY);\n          }\n\n          prevY = curY;\n          prevGradient = curGradient;\n        }\n\n        graphContext.stroke();\n        this.pointInterval = prevPointInterval;\n      }\n    }\n  },\n  Scale: function (ratio) {\n    if (this.upperLimitX * ratio > 1000) {\n      ratio = 1000 / this.upperLimitX;\n    }\n\n    if (this.lowerLimitX * ratio < -1000) {\n      ratio = -1000 / this.lowerLimitX;\n    }\n\n    this.pointInterval *= ratio;\n    this.zoomRatio *= ratio;\n    this.fontSize *= ratio;\n    graphContext.scale(1 / ratio, 1 / ratio);\n    this.lowerLimitX *= ratio;\n    this.upperLimitX *= ratio;\n    this.lowerLimitY *= ratio;\n    this.upperLimitY *= ratio;\n    this.functionWidth *= ratio;\n    this.minorScaleWidth *= ratio;\n    this.GraphCalculator();\n  },\n  ClearAll: function () {\n    graphContext.save();\n    graphContext.setTransform(1, 0, 0, 1, 0, 0);\n    graphContext.clearRect(0, 0, graphCanvas.width, graphCanvas.height);\n    graphContext.fillStyle = \"white\";\n    graphContext.fillRect(0, 0, graphCanvas.width, graphCanvas.height);\n    graphContext.restore();\n  },\n  DrawAxes: function () {\n    graphContext.beginPath(); // axes\n\n    graphContext.strokeStyle = graphObject.scaleColour;\n    graphContext.lineWidth = graphObject.functionWidth;\n    graphContext.moveTo(this.lowerLimitX, 0);\n    graphContext.lineTo(this.upperLimitX, 0);\n    graphContext.moveTo(0, this.upperLimitY);\n    graphContext.lineTo(0, this.lowerLimitY);\n    graphContext.stroke();\n    const roundedlowerLimitX = Math.floor(this.lowerLimitX / 1000) * 1000; // setup for minor axes\n\n    const roundedupperLimitX = Math.ceil(this.upperLimitX / 1000) * 1000;\n    const roundedlowerLimitY = Math.floor(this.lowerLimitY / 1000) * 1000;\n    const roundedupperLimitY = Math.ceil(this.upperLimitY / 1000) * 1000;\n    graphContext.font = this.fontSize + 'px sans-serif';\n    graphContext.fillStyle = graphObject.scaleColour;\n    graphContext.lineWidth = graphObject.minorScaleWidth;\n\n    for (let x = roundedlowerLimitX; x < roundedupperLimitX; x += 100) {\n      // minor axes\n      graphContext.moveTo(x, this.upperLimitY);\n      graphContext.lineTo(x, this.lowerLimitY);\n    }\n\n    for (let y = roundedlowerLimitY; y < roundedupperLimitY; y += 100) {\n      graphContext.moveTo(this.lowerLimitX, y);\n      graphContext.lineTo(this.upperLimitX, y);\n    }\n\n    graphContext.stroke();\n    graphContext.save();\n    graphContext.scale(1, -1);\n\n    for (let x = roundedlowerLimitX; x < roundedupperLimitX; x += 100) {\n      // numbering\n      graphContext.fillText(x, x, -1);\n    }\n\n    for (let y = roundedlowerLimitY; y < roundedupperLimitY; y += 100) {\n      // numbering\n      graphContext.fillText(y, 1, -y);\n    }\n\n    graphContext.restore();\n  },\n  ShiftGraph: function (shiftByX, shiftByY) {\n    shiftByX *= this.zoomRatio;\n    shiftByY *= this.zoomRatio;\n\n    if (this.upperLimitX - shiftByX > 1000) {\n      shiftByX = 0;\n    }\n\n    if (this.lowerLimitX - shiftByX < -1000) {\n      shiftByX = 0;\n    }\n\n    graphContext.transform(1, 0, 0, 1, shiftByX, shiftByY);\n    this.upperLimitX -= shiftByX;\n    this.lowerLimitX -= shiftByX;\n    this.upperLimitY -= shiftByY;\n    this.lowerLimitY -= shiftByY;\n    this.GraphCalculator();\n  }\n};\n\nclass expressionConstructor {\n  constructor(expr, domain, colour) {\n    this.expr = expr;\n    this.domain = domain;\n    this.colour = colour;\n  }\n\n} //#endregion\n//#region Timing graph\n\n\nlet timingCanvas;\nlet timingContext;\nlet timingGraphObject = {\n  Setup: function () {\n    this.beatsPerScreen = 8 + 1; // one less than true\n\n    this.timeBetweenBeats = 1000; // in milliseconds\n\n    this.beat = 1;\n    this.audioSources = [new audioSource()]; // default first instrument/graph\n\n    this.timer = 0;\n    this.audioSourcesToPlay = [];\n    this.CalculateNextNote();\n  },\n\n  CalculateNextNote() {\n    this.timer = setTimeout(() => {\n      this.MoveTimerBarAndPlay();\n    }, this.timeBetweenBeats);\n\n    if (this.beat >= this.beatsPerScreen) {\n      this.beat = 1;\n    }\n\n    this.beat++;\n    let timerBarPosition = Math.round(graphObject.lowerLimitX + (graphObject.upperLimitX - graphObject.lowerLimitX) / this.beatsPerScreen * this.beat);\n\n    for (let i = 0; i < this.audioSources.length; i++) {\n      if (graphObject.expressions[i].validity === true && timerBarPosition >= graphObject.expressions[i].domain[0] && timerBarPosition <= graphObject.expressions[i].domain[1] && this.audioSources[i].muteToggle === false) {\n        let newFreq = graphObject.calculate(timerBarPosition, graphObject.expressions[i].expr);\n        this.audioSourcesToPlay.push(this.audioSources[i]);\n\n        if (newFreq <= -12000) {\n          this.audioSources[i].changeFrequency(-12000);\n        } else if (newFreq >= 12000) {\n          this.audioSources[i].changeFrequency(12000);\n        } else if (isNaN(newFreq) === false) {\n          this.audioSources[i].changeFrequency(newFreq);\n        }\n      }\n    }\n  },\n\n  MoveTimerBarAndPlay() {\n    timingContext.clearRect(0, 0, graphCanvas.width, graphCanvas.height);\n    timingContext.beginPath();\n    timingContext.moveTo(graphCanvas.width / this.beatsPerScreen * this.beat, 0);\n    timingContext.lineTo(graphCanvas.width / this.beatsPerScreen * this.beat, graphCanvas.height);\n    timingContext.stroke();\n\n    for (let i = 0; i < this.audioSourcesToPlay.length; i++) {\n      timingGraphObject.audioSourcesToPlay[i].play();\n    }\n\n    this.audioSourcesToPlay = [];\n    this.CalculateNextNote();\n  }\n\n}; //#endregion\n//#region Audio\n\nlet instrumentList = new Instruments().names.splice(0, 127);\n\nclass audioSource {\n  constructor() {\n    this.instrumentNumber = 0; // default\n\n    this.frequency = 0;\n    this.player = new Instruments();\n    this.muteToggle = false;\n  }\n\n  play() {\n    if (this.muteToggle === false) {\n      this.player.play(this.instrumentNumber, this.frequency, 1, 0, 0.5);\n    }\n  }\n\n  changeFrequency(newFreq) {\n    this.frequency = Math.abs(newFreq);\n  }\n\n  changeMuteToggle(newVal) {\n    this.muteToggle = newVal;\n  }\n\n  changeInstrument(newInstrumentNumber) {\n    this.instrumentNumber = newInstrumentNumber;\n  }\n\n} //#endregion\n//#region React components\n\n\nclass AllInputs extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      components: [0]\n    };\n    this.IDCount = 0;\n    this.possibleColourArray = [\"#2F2980\", \"#0476D9\", \"#56DACC\", \"#8C186D\", \"#F23535\", \"#ffffff\"];\n    this.lastColourPicked = 0;\n  }\n\n  create() {\n    let prevState = this.state.components;\n    this.IDCount++;\n    prevState.push(this.IDCount);\n    graphObject.expressions.push(new expressionConstructor(\"\", [-1000, 1000], this.possibleColourArray[this.lastColourPicked]));\n\n    if (this.lastColourPicked === 4) {\n      this.lastColourPicked = 0;\n    } else {\n      this.lastColourPicked++;\n    }\n\n    timingGraphObject.audioSources.push(new audioSource());\n    this.setState({\n      components: prevState\n    });\n  }\n\n  delete(id) {\n    let prevState = this.state.components;\n    let idIndex = prevState.findIndex(el => el === id);\n    prevState.splice(idIndex, 1);\n    graphObject.expressions.splice(idIndex, 1);\n    timingGraphObject.audioSources.splice(idIndex, 1);\n    this.setState({\n      components: prevState\n    });\n    graphObject.GraphCalculator();\n  }\n\n  changeInstrument(id, newInstrumentNumber) {\n    let idIndex = this.state.components.findIndex(el => el === id);\n    timingGraphObject.audioSources[idIndex].changeInstrument(newInstrumentNumber);\n  }\n\n  changeDomain(id, newValue) {\n    let idIndex = this.state.components.findIndex(el => el === id);\n    graphObject.expressions[idIndex].domain = newValue;\n    graphObject.GraphCalculator();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(InputBox, {\n      components: this.state.components,\n      deleteFunction: this.delete.bind(this),\n      createFunction: this.create.bind(this),\n      changeInstrumentFunction: this.changeInstrument.bind(this),\n      changeDomainFunction: this.changeDomain.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nclass InputBox extends React.Component {\n  // where we type in the function and clear\n  constructor(props) {\n    super(props);\n    this.handleChangeDomain = this.handleChangeDomain.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleDeleteFunction = this.handleDelete.bind(this);\n  }\n\n  handleCreate(id) {\n    this.props.createFunction(id);\n  }\n\n  handleDelete(id) {\n    this.props.deleteFunction(id);\n  }\n\n  handleChangeDomain(id, newValue) {\n    this.props.changeDomainFunction(id, newValue);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }\n    }, this.props.components.map(comp => /*#__PURE__*/React.createElement(ListGroup.Item, {\n      className: \"ListGroupItem\",\n      key: comp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      components: this.props.components,\n      id: comp,\n      deleteFunction: this.handleDeleteFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ReactSlider, {\n      defaultValue: [-1000, 1000],\n      max: 1000,\n      min: -1000,\n      renderThumb: (props, state) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 54\n        }\n      }), state.valueNow),\n      onAfterChange: val => {\n        this.handleChangeDomain(comp, val);\n      },\n      className: \"horizontal-slider-twohandle\",\n      thumbClassName: \"sliderThumbTwoHandle\",\n      trackClassName: \"sliderTrack\",\n      pearling: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(InstrumentChooser, {\n      id: comp,\n      changeInstrumentFunction: this.props.changeInstrumentFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Button, {\n      className: \"newFunctionButton\",\n      variant: \"dark\",\n      onClick: this.handleCreate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 102\n      }\n    })), /*#__PURE__*/React.createElement(Accordion, {\n      className: \"HelpAccordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"dark\",\n      eventKey: \"0\",\n      className: \"HelpButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 15\n      }\n    }, \"About\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 15\n      }\n    }, \"To make sounds, enter in any function with x as the only variable, like sin(x)*50 or x^3+x+24 or 400/x. A sound will be made where the vertical counting bar crosses any function.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 17\n      }\n    }), \"The frequency of the sound will be the y value of the intersection of the function and vertical bar, this means that higher values will work better e.g sin(x)*50 rather than sin(x). The Beats Per Screen slider at the top of screen amount of times the vertical bar will occur per screen. The Time Per Beat slider controls the time between the vertical bar moving. You can adjust the domain of the function with its slider below it, along with its instrument. You can add as many functions as you like, click the plus button to create a new one, and the x button to delete one graph.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 17\n      }\n    }), \"Just play around with it! Pick whatever instrument sounds interesting, fiddle around with the sliders and make something that sounds cool!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nclass InstrumentChooser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    let newAudioType = document.getElementById(this.props.id + \"audioType\").value;\n    this.props.changeInstrumentFunction(this.props.id, newAudioType);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: this.handleChange,\n      id: this.props.id + \"audioType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 7\n      }\n    }, instrumentList.map((name, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 20\n        }\n      }, name);\n    }));\n  }\n\n}\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.idIndex = this.props.components.findIndex(el => el === this.props.id);\n    this.colour = graphObject.expressions[this.idIndex].colour;\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n    graphObject.expressions[this.idIndex].expr = e.target.value.toLowerCase();\n    graphObject.expressions[this.idIndex].validity = false;\n\n    if (e.target.value === \"\") {\n      graphObject.expressions[this.idIndex].expr = \"\";\n      graphObject.expressions[this.idIndex].validity = false;\n      graphObject.GraphCalculator();\n    } else if (graphObject.ExpressionValidifier(graphObject.expressions[this.idIndex].expr, this.idIndex) === true) {\n      graphObject.expressions[this.idIndex].validity = true;\n      graphObject.GraphCalculator();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      className: \"colourIndicator\",\n      style: {\n        backgroundColor: this.colour\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 11\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"Input\",\n      isInvalid: !graphObject.expressions[this.idIndex].validity,\n      placeholder: \"Enter function e.g 3x + 70\",\n      type: \"text\",\n      value: this.state.text,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MuteButton, {\n      id: this.props.id,\n      components: this.props.components,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DeleteButton, {\n      id: this.props.id,\n      deleteFunction: this.props.deleteFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass DeleteButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.deleteFunction(this.props.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-dark\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 68\n      }\n    })));\n  }\n\n}\n\nclass MuteButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      iconToShow: \"fas fa-volume-up\",\n      isMuted: false\n    };\n  }\n\n  handleChange() {\n    let idIndex = this.props.components.findIndex(el => el === this.props.id);\n\n    if (this.state.isMuted === true) {\n      timingGraphObject.audioSources[idIndex].changeMuteToggle(false); // not muted\n\n      this.setState({\n        iconToShow: \"fas fa-volume-up\",\n        isMuted: false\n      });\n    } else {\n      timingGraphObject.audioSources[idIndex].changeMuteToggle(true); // muted\n\n      this.setState({\n        iconToShow: \"fas fa-volume-mute\",\n        isMuted: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-dark\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.iconToShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 12\n      }\n    })));\n  }\n\n}\n\nclass BPS extends React.Component {\n  constructor() {\n    super();\n    this.handleChangeBPS = this.handleChangeBPS.bind(this);\n    this.state = {\n      value: 50\n    };\n  }\n\n  handleChangeBPS(newVal) {\n    this.setState({\n      value: newVal\n    });\n    timingGraphObject.beatsPerScreen = newVal;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"Slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 11\n      }\n    }, \"Beats Per Screen\"), /*#__PURE__*/React.createElement(ReactSlider, {\n      defaultValue: this.state.value,\n      max: 100,\n      min: 1,\n      renderThumb: (props, state) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 44\n        }\n      }), state.value),\n      onChange: val => {\n        this.handleChangeBPS(val);\n      },\n      className: \"horizontal-slider-onehandle\",\n      thumbClassName: \"sliderThumb\",\n      trackClassName: \"sliderTrack\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nclass TBB extends React.Component {\n  constructor() {\n    super();\n    this.handleChangeTBB = this.handleChangeTBB.bind(this);\n    this.state = {\n      value: 500\n    };\n  }\n\n  handleChangeTBB(newVal) {\n    this.setState({\n      value: newVal\n    });\n    timingGraphObject.timeBetweenBeats = newVal;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"Slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 11\n      }\n    }, \"Time Between Beats\"), /*#__PURE__*/React.createElement(ReactSlider, {\n      defaultValue: this.state.value,\n      max: 1000,\n      min: 100,\n      renderThumb: (props, state) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 44\n        }\n      }), state.value / 1000 + \"s\"),\n      onChange: val => {\n        this.handleChangeTBB(val);\n      },\n      className: \"horizontal-slider-onehandle\",\n      step: 100,\n      thumbClassName: \"sliderThumb\",\n      trackClassName: \"sliderTrack\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nclass Graphs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graphCanvasRef = React.createRef();\n    this.timingCanvasRef = React.createRef();\n    this.windowWidth = window.innerWidth;\n    this.dragCoords = {\n      x: 0,\n      y: 0\n    };\n    this.pointerEventArray = [];\n    this.prevPointDist = -1;\n    this.dragging = false;\n    this.timesPerSecond = 60;\n    this.waiting = false;\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n    this.handleWheel = this.handleWheel.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n  }\n\n  componentDidMount() {\n    graphCanvas = this.graphCanvasRef.current;\n    graphContext = this.graphCanvasRef.current.getContext('2d');\n    timingCanvas = this.timingCanvasRef.current;\n    timingContext = this.timingCanvasRef.current.getContext('2d');\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  preventDefault(e) {\n    e.returnValue = false;\n  }\n\n  handleMouseEnter() {\n    document.addEventListener('wheel', this.preventDefault, {\n      passive: false\n    });\n  }\n\n  handleMouseDown(e) {\n    e.persist();\n    this.pointerEventArray.push(e);\n    this.dragging = true;\n    this.dragCoords = {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  handleMouseMove(e) {\n    if (this.waiting === false && this.dragging === true) {\n      // throttling\n      e.persist();\n\n      for (let i = 0; i < this.pointerEventArray.length; i++) {\n        // for handling a pinch gesture\n        if (e.pointerId === this.pointerEventArray[i].pointerId) {\n          this.pointerEventArray[i] = e;\n          break;\n        }\n      }\n\n      if (this.pointerEventArray.length === 2) {\n        let curPointDist = Math.hypot(this.pointerEventArray[0].clientX - this.pointerEventArray[1].clientX, this.pointerEventArray[0].clientY - this.pointerEventArray[1].clientY);\n\n        if (this.prevPointDist > 0) {\n          if (curPointDist > this.prevPointDist) {\n            graphObject.Scale(0.9);\n          } else if (curPointDist < this.prevPointDist) {\n            graphObject.Scale(1.1);\n          }\n        }\n\n        this.prevPointDist = curPointDist;\n        return;\n      }\n\n      if (this.dragging === true) {\n        graphObject.ShiftGraph(e.clientX - this.dragCoords.x, this.dragCoords.y - e.clientY);\n        this.dragCoords = {\n          x: e.clientX,\n          y: e.clientY\n        };\n      }\n\n      this.waiting = true;\n      setTimeout(function () {\n        this.waiting = false;\n      }.bind(this), 1000 / this.timesPerSecond);\n    }\n  }\n\n  handleMouseUp(e) {\n    e.persist();\n    this.pointerEventArray = [];\n\n    for (let i = 0; i < this.pointerEventArray.length; i++) {\n      if (this.pointerEventArray[i].pointerId === e.pointerId) {\n        this.pointerEventArray.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.pointerEventArray.length < 2) {\n      this.prevPointDist = -1;\n    }\n\n    this.dragging = false;\n  }\n\n  handleMouseOut() {\n    this.dragging = false;\n    document.removeEventListener('wheel', this.preventDefault, false);\n  }\n\n  handleWheel(e) {\n    if (e.deltaY < 0) {\n      // Zoom in\n      graphObject.Scale(0.9);\n    } else {\n      // Zoom out\n      graphObject.Scale(1.1);\n    }\n  }\n\n  handleResize() {\n    if (window.innerWidth !== this.windowWidth) {\n      // makes resize only happen for width changes\n      this.windowWidth = window.innerWidth;\n\n      if (window.innerWidth < 992) {\n        // if the window less than lg breakpoint\n        graphObject.WindowSizeChange(document.getElementById('graphwrapper').getBoundingClientRect().width, window.innerHeight * 0.5);\n      } else {\n        graphObject.WindowSizeChange(window.innerWidth * 0.65, window.innerHeight);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.graphCanvasRef,\n      onPointerDown: this.handleMouseDown,\n      onPointerMove: this.handleMouseMove,\n      onPointerUp: this.handleMouseUp,\n      onPointerOut: this.handleMouseOut,\n      onWheel: this.handleWheel,\n      onPointerEnter: this.handleMouseEnter,\n      className: \"graphCanvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 9\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.timingCanvasRef,\n      className: \"timingCanvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    graphObject.expressions = [new expressionConstructor(\"0\", [-1000, 1000], \"#000000\")]; // array of objects that gets all info about a certain expression colour, value and domains.\n    // initialised here so component in charge of displaying colour will know what's going on\n  }\n\n  componentDidMount() {\n    graphObject.Setup();\n    graphObject.DrawAxes();\n    timingGraphObject.Setup();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      fill: true,\n      className: \"topbar \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BPS, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TBB, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      lg: {\n        span: 4,\n        order: 'first'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AllInputs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: {\n        span: 12,\n        order: 'first'\n      },\n      lg: 8,\n      className: \"graphColumn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"graphwrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Graphs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n} //#endregion\n\n\nexport default App;","map":{"version":3,"sources":["/home/james/Documents/Coding Projects/Math.Sound/src/App.js"],"names":["React","derivative","parse","ReactSlider","create","all","Col","Container","ListGroup","Row","Nav","Form","Accordion","InputGroup","Button","Card","graphCanvas","graphContext","math","require","Instruments","restrictedMath","restrictedEvaluate","evaluate","import","override","graphObject","Setup","plotsPerScreen","numGrids","scaleColour","lineJoin","window","innerWidth","WindowSizeChange","document","getElementById","getBoundingClientRect","width","innerHeight","height","timingCanvas","upperLimitX","lowerLimitX","upperLimitY","lowerLimitY","pointInterval","setTransform","fontSize","functionWidth","minorScaleWidth","zoomRatio","timingContext","lineWidth","strokeStyle","ChangeDefaultScaling","GraphCalculator","Scale","Math","abs","ExpressionValidifier","exprText","idIndex","exprObject","symbolNodes","filter","node","isSymbolNode","operatorNodes","isOperatorNode","functionNodes","isFunctionNode","i","length","args","name","isBinary","isUnary","expressions","toString","calculate","input","expression","scope","x","ClearAll","DrawAxes","curGradient","prevGradient","curY","prevY","prevPointInterval","z","curExpression","expr","curDerivative","validity","beginPath","colour","moveTo","domain","lowerLimitOfLoop","upperLimitOfLoop","sign","lineTo","stroke","ratio","scale","save","clearRect","fillStyle","fillRect","restore","roundedlowerLimitX","floor","roundedupperLimitX","ceil","roundedlowerLimitY","roundedupperLimitY","font","y","fillText","ShiftGraph","shiftByX","shiftByY","transform","expressionConstructor","constructor","timingGraphObject","beatsPerScreen","timeBetweenBeats","beat","audioSources","audioSource","timer","audioSourcesToPlay","CalculateNextNote","setTimeout","MoveTimerBarAndPlay","timerBarPosition","round","muteToggle","newFreq","push","changeFrequency","isNaN","play","instrumentList","names","splice","instrumentNumber","frequency","player","changeMuteToggle","newVal","changeInstrument","newInstrumentNumber","AllInputs","Component","state","components","IDCount","possibleColourArray","lastColourPicked","prevState","setState","delete","id","findIndex","el","changeDomain","newValue","render","bind","InputBox","props","handleChangeDomain","handleCreate","handleDeleteFunction","handleDelete","createFunction","deleteFunction","changeDomainFunction","map","comp","valueNow","val","changeInstrumentFunction","InstrumentChooser","handleChange","newAudioType","value","index","Input","text","e","target","toLowerCase","backgroundColor","DeleteButton","handleClick","MuteButton","iconToShow","isMuted","BPS","handleChangeBPS","TBB","handleChangeTBB","Graphs","graphCanvasRef","createRef","timingCanvasRef","windowWidth","dragCoords","pointerEventArray","prevPointDist","dragging","timesPerSecond","waiting","handleMouseDown","handleMouseMove","handleMouseUp","handleMouseOut","handleWheel","handleResize","handleMouseEnter","componentDidMount","current","getContext","addEventListener","preventDefault","returnValue","passive","persist","clientX","clientY","pointerId","curPointDist","hypot","removeEventListener","deltaY","App","PureComponent","span","order"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { derivative, parse } from 'mathjs';\nimport ReactSlider from 'react-slider';\nimport { create, all } from 'mathjs';\nimport { Col, Container, ListGroup, Row, Nav, Form, Accordion, InputGroup, Button, Card } from 'react-bootstrap';\n\n//#region Graph Actions\n\nlet graphCanvas;\nlet graphContext;\n\n\nconst math = require('mathjs');\nconst Instruments = require('webaudio-instruments');\nconst restrictedMath = create(all)\nconst restrictedEvaluate = restrictedMath.evaluate;\nrestrictedMath.import({\n  'import': function () { return },\n  'createUnit': function () { return },\n  'evaluate': function () { return },\n  'parse': function () { return },\n  'simplify': function () { return },\n  'derivative': function () { return },\n\n}, { override: true })\n\n\n\n\nlet graphObject = { // main object, with all graphCanvas manipulation methods\n\n  Setup: function () {\n\n\n    this.plotsPerScreen = 400; //TODO allow this to change for different processor strengths\n    this.numGrids = 20; // number of grid markings\n\n    this.scaleColour = \"#000D34\";\n\n    graphContext.lineJoin = \"round\";\n\n    if (window.innerWidth < 992) {\n      this.WindowSizeChange(document.getElementById('graphwrapper').getBoundingClientRect().width, window.innerHeight * 0.5);\n    }\n    else {\n      this.WindowSizeChange(window.innerWidth * 0.65, window.innerHeight);\n\n    }\n\n  },\n  WindowSizeChange: function (width, height) {\n    graphCanvas.width = width;\n    graphCanvas.height = height;\n    timingCanvas.width = width;\n    timingCanvas.height = height;\n\n    this.upperLimitX = graphCanvas.width / 2;\n    this.lowerLimitX = -graphCanvas.width / 2;\n    this.upperLimitY = graphCanvas.height / 2;\n    this.lowerLimitY = -graphCanvas.height / 2;\n    this.pointInterval = graphCanvas.width / this.plotsPerScreen; // changes for balance of smoothness of line with time to compute, decrease with more zoom increase with less zoom, by default 1000 plots per screen\n\n    graphContext.setTransform(1, 0, 0, -1, graphCanvas.width / 2, graphCanvas.height / 2); // inverts y-axis in order to increase as you move further up as in the cartesian plane\n    this.fontSize = 10;\n    this.functionWidth = \"0.5\";\n    this.minorScaleWidth = \"0.1\";\n    this.zoomRatio = 1; // each pixel equals one unit at the start\n    timingContext.lineWidth = 2;\n    timingContext.strokeStyle = \"#56DACC\";\n\n    this.ChangeDefaultScaling()\n\n    this.GraphCalculator();\n\n  },\n  ChangeDefaultScaling() {\n    if (this.lowerLimitX < -1000 || this.upperLimitX > 1000) {\n      this.Scale(2000 / (Math.abs(this.upperLimitX) + Math.abs(this.lowerLimitX)))\n\n    }\n\n  },\n  ExpressionValidifier(exprText, idIndex) { // checks expression before making calculations to avoid wasting resources\n    let exprObject;\n    try { // first test is to try and parse the expression\n      exprObject = parse(exprText)\n\n\n\n    } catch {\n      return false;\n    }\n    // second test is to see if all variables are x\n\n    let symbolNodes = exprObject.filter(function (node) {\n      return node.isSymbolNode\n    })\n    let operatorNodes = exprObject.filter(function (node) {\n      return node.isOperatorNode;\n    })\n    let functionNodes = exprObject.filter(function (node) {\n      return node.isFunctionNode;\n    })\n    // since symbolnodes are used for variables and functions, we must check that all symbolnodes are\n    // either x or a function, also check that no operation is done that has a symbolnode that is not x\n    for (let i = 0; i < functionNodes.length; i++) {\n      if (functionNodes[i].args.length < 1) {\n\n        return false;\n      }\n    }\n    if (symbolNodes.length > 0) {\n\n      for (let i = 0; i < symbolNodes.length; i++) {\n\n        if (symbolNodes[i].name === 'x' || symbolNodes[i].name in math) {\n\n\n        }\n        else {\n          return false;\n        }\n\n      }\n      for (let i = 0; i < operatorNodes.length; i++) { // check that no operation is done with non x symbolnode, otherwise tan * 4 etc would break it\n        if (operatorNodes[i].isBinary()) {\n          if (operatorNodes[i].args[0].isSymbolNode && operatorNodes[i].args[0].name !== 'x') {\n            return false;\n          }\n          if (operatorNodes[i].args[1].isSymbolNode && operatorNodes[i].args[1].name !== 'x') {\n            return false;\n          }\n        }\n        if (operatorNodes[i].isUnary()) { // protests from x! as no negative factorials allowed\n          if (operatorNodes[i].args[0].isSymbolNode) {\n\n            return false;\n          }\n\n        }\n\n      }\n\n    }\n\n\n    //tests passed, expression valid\n\n    // get the derivative as well and add it as a property\n\n    try {\n      graphObject.expressions[idIndex].derivative = derivative(exprObject, \"x\").toString();\n\n    }\n    catch {\n    }\n\n\n\n    return true\n\n\n  },\n\n  calculate: function (input, expression) {\n\n    const scope = {\n      x: input\n    }\n\n    return restrictedEvaluate(expression, scope);\n\n\n  }\n  ,\n\n  GraphCalculator: function () { // drawing your own graphs \n    this.ClearAll();\n    this.DrawAxes();\n\n    let curGradient;\n    let prevGradient;\n\n    let curY;\n    let prevY;\n\n    let prevPointInterval = this.pointInterval;\n    graphContext.lineWidth = graphObject.functionWidth;\n\n    for (let z = 0; z < this.expressions.length; z++) {\n\n      let curExpression = this.expressions[z].expr;\n      let curDerivative = this.expressions[z].derivative;\n      if (this.expressions[z].validity === true) {\n\n        graphContext.beginPath();\n        graphContext.strokeStyle = this.expressions[z].colour;\n        graphContext.moveTo(this.expressions[z].domain[0], this.calculate(this.expressions[z].domain[0], curExpression));\n\n        let lowerLimitOfLoop;\n        let upperLimitOfLoop;\n        if (this.expressions[z].domain[0] > this.lowerLimitX) { // checks if domain or edge of canvas is closer and sets it to the limits of the loop\n          lowerLimitOfLoop = this.expressions[z].domain[0];\n        } else {\n          lowerLimitOfLoop = this.lowerLimitX;\n        }\n        if (this.expressions[z].domain[1] < this.upperLimitX) {\n          upperLimitOfLoop = this.expressions[z].domain[1];\n        } else {\n          upperLimitOfLoop = this.upperLimitX;\n        }\n\n        for (let i = lowerLimitOfLoop; i < upperLimitOfLoop; i += this.pointInterval) {\n\n          curY = this.calculate(i, curExpression)\n          curGradient = this.calculate(i, curDerivative);\n\n          if (Math.sign(curGradient) === -1 && Math.sign(prevGradient) === -1 && curY > prevY) {\n            graphContext.lineTo(i, -10000);\n            graphContext.stroke();\n            graphContext.beginPath();\n            graphContext.moveTo(i + 0.001, 10000);\n          }\n          else if (Math.sign(curGradient) === 1 && Math.sign(prevGradient) === 1 && curY < prevY) {\n            graphContext.lineTo(i, 10000);\n            graphContext.stroke();\n            graphContext.beginPath();\n            graphContext.moveTo(i + 0.001, -10000);\n\n          }\n          else {\n            graphContext.lineTo(i, curY);\n\n          }\n\n\n          prevY = curY;\n          prevGradient = curGradient;\n\n\n\n\n        }\n\n        graphContext.stroke();\n        this.pointInterval = prevPointInterval;\n\n      }\n\n    }\n\n  },\n\n\n  Scale: function (ratio) {\n    if (this.upperLimitX * ratio > 1000) {\n      ratio = 1000 / this.upperLimitX\n    }\n    if (this.lowerLimitX * ratio < -1000) {\n      ratio = -1000 / this.lowerLimitX\n\n    }\n    this.pointInterval *= ratio;\n    this.zoomRatio *= ratio;\n    this.fontSize *= ratio;\n    graphContext.scale(1 / ratio, 1 / ratio);\n    this.lowerLimitX *= ratio;\n\n    this.upperLimitX *= ratio;\n    this.lowerLimitY *= ratio;\n    this.upperLimitY *= ratio;\n    this.functionWidth *= ratio;\n    this.minorScaleWidth *= ratio;\n    this.GraphCalculator();\n\n  },\n  ClearAll: function () {\n    graphContext.save();\n    graphContext.setTransform(1, 0, 0, 1, 0, 0);\n    graphContext.clearRect(0, 0, graphCanvas.width, graphCanvas.height);\n    graphContext.fillStyle = \"white\";\n    graphContext.fillRect(0, 0, graphCanvas.width, graphCanvas.height);\n    graphContext.restore();\n  },\n\n  DrawAxes: function () {\n\n    graphContext.beginPath(); // axes\n    graphContext.strokeStyle = graphObject.scaleColour;\n    graphContext.lineWidth = graphObject.functionWidth;\n\n    graphContext.moveTo(this.lowerLimitX, 0);\n    graphContext.lineTo(this.upperLimitX, 0);\n\n    graphContext.moveTo(0, this.upperLimitY);\n    graphContext.lineTo(0, this.lowerLimitY);\n\n    graphContext.stroke();\n\n\n    const roundedlowerLimitX = Math.floor(this.lowerLimitX / 1000) * 1000; // setup for minor axes\n    const roundedupperLimitX = Math.ceil(this.upperLimitX / 1000) * 1000;\n    const roundedlowerLimitY = Math.floor(this.lowerLimitY / 1000) * 1000;\n    const roundedupperLimitY = Math.ceil(this.upperLimitY / 1000) * 1000;\n\n\n    graphContext.font = this.fontSize + 'px sans-serif';\n    graphContext.fillStyle = graphObject.scaleColour;\n    graphContext.lineWidth = graphObject.minorScaleWidth;\n\n\n    for (let x = roundedlowerLimitX; x < roundedupperLimitX; x += 100) { // minor axes\n\n      graphContext.moveTo(x, this.upperLimitY);\n      graphContext.lineTo(x, this.lowerLimitY);\n\n\n    }\n\n    for (let y = roundedlowerLimitY; y < roundedupperLimitY; y += 100) {\n\n      graphContext.moveTo(this.lowerLimitX, y);\n      graphContext.lineTo(this.upperLimitX, y);\n\n    }\n\n    graphContext.stroke();\n\n    graphContext.save();\n    graphContext.scale(1, -1);\n\n\n    for (let x = roundedlowerLimitX; x < roundedupperLimitX; x += 100) { // numbering\n\n\n      graphContext.fillText(x, x, -1);\n\n    }\n\n    for (let y = roundedlowerLimitY; y < roundedupperLimitY; y += 100) { // numbering\n\n\n      graphContext.fillText(y, 1, -y);\n\n    }\n\n    graphContext.restore();\n\n\n  },\n  ShiftGraph: function (shiftByX, shiftByY) {\n\n    shiftByX *= this.zoomRatio;\n    shiftByY *= this.zoomRatio;\n    if (this.upperLimitX - shiftByX > 1000) {\n      shiftByX = 0\n    }\n    if (this.lowerLimitX - shiftByX < -1000) {\n      shiftByX = 0\n\n    }\n\n\n    graphContext.transform(1, 0, 0, 1, shiftByX, shiftByY);\n    this.upperLimitX -= shiftByX;\n    this.lowerLimitX -= shiftByX;\n    this.upperLimitY -= shiftByY;\n    this.lowerLimitY -= shiftByY;\n    this.GraphCalculator();\n\n\n  },\n\n\n}\n\nclass expressionConstructor {\n  constructor(expr, domain, colour) {\n    this.expr = expr;\n    this.domain = domain\n    this.colour = colour\n  }\n\n}\n//#endregion\n\n\n//#region Timing graph\nlet timingCanvas;\nlet timingContext;\n\n\nlet timingGraphObject = {\n  Setup: function () {\n\n\n    this.beatsPerScreen = 8 + 1; // one less than true\n    this.timeBetweenBeats = 1000; // in milliseconds\n    this.beat = 1;\n    this.audioSources = [new audioSource()]; // default first instrument/graph\n    this.timer = 0;\n    this.audioSourcesToPlay = [];\n    this.CalculateNextNote();\n\n\n  },\n  CalculateNextNote() {\n    this.timer = setTimeout(() => {\n      this.MoveTimerBarAndPlay();\n    }, this.timeBetweenBeats);\n\n\n    if (this.beat >= this.beatsPerScreen) {\n      this.beat = 1;\n    }\n\n    this.beat++;\n    let timerBarPosition = Math.round(graphObject.lowerLimitX + (graphObject.upperLimitX - graphObject.lowerLimitX) / this.beatsPerScreen * (this.beat))\n\n    for (let i = 0; i < this.audioSources.length; i++) {\n      if (graphObject.expressions[i].validity === true && timerBarPosition >= graphObject.expressions[i].domain[0] && timerBarPosition <= graphObject.expressions[i].domain[1] && this.audioSources[i].muteToggle === false) {\n        let newFreq = graphObject.calculate(timerBarPosition, graphObject.expressions[i].expr);\n        this.audioSourcesToPlay.push(this.audioSources[i]);\n        if (newFreq <= -12000) {\n          this.audioSources[i].changeFrequency(-12000);\n\n        }\n        else if (newFreq >= 12000) {\n          this.audioSources[i].changeFrequency(12000);\n\n\n        }\n        else if (isNaN(newFreq) === false) {\n          this.audioSources[i].changeFrequency(newFreq);\n\n\n        }\n\n      }\n    }\n\n\n\n  },\n  MoveTimerBarAndPlay() {\n    timingContext.clearRect(0, 0, graphCanvas.width, graphCanvas.height);\n\n    timingContext.beginPath();\n    timingContext.moveTo(graphCanvas.width / this.beatsPerScreen * this.beat, 0);\n    timingContext.lineTo(graphCanvas.width / this.beatsPerScreen * this.beat, graphCanvas.height);\n    timingContext.stroke();\n\n    for (let i = 0; i < this.audioSourcesToPlay.length; i++) {\n      timingGraphObject.audioSourcesToPlay[i].play();\n    }\n    this.audioSourcesToPlay = [];\n\n\n    this.CalculateNextNote();\n  }\n}\n//#endregion\n\n//#region Audio\n\nlet instrumentList = new Instruments().names.splice(0, 127);\n\nclass audioSource {\n  constructor() {\n\n    this.instrumentNumber = 0; // default\n    this.frequency = 0;\n    this.player = new Instruments();\n    this.muteToggle = false;\n\n\n  }\n  play() {\n    if (this.muteToggle === false) {\n      this.player.play(this.instrumentNumber, this.frequency, 1, 0, 0.5)\n\n\n    }\n\n  }\n  changeFrequency(newFreq) {\n\n    this.frequency = Math.abs(newFreq);\n  }\n  changeMuteToggle(newVal) {\n    this.muteToggle = newVal;\n  }\n  changeInstrument(newInstrumentNumber) {\n\n\n    this.instrumentNumber = newInstrumentNumber;\n  }\n\n\n\n}\n\n//#endregion\n\n//#region React components\nclass AllInputs extends React.Component {\n\n  constructor() {\n    super()\n    this.state = { components: [0] };\n    this.IDCount = 0;\n    this.possibleColourArray = [\"#2F2980\", \"#0476D9\", \"#56DACC\", \"#8C186D\", \"#F23535\", \"#ffffff\"]\n    this.lastColourPicked = 0;\n  }\n  create() {\n    let prevState = this.state.components;\n    this.IDCount++;\n    prevState.push(this.IDCount)\n    graphObject.expressions.push(new expressionConstructor(\"\", [-1000, 1000], this.possibleColourArray[this.lastColourPicked]));\n    if (this.lastColourPicked === 4) {\n      this.lastColourPicked = 0;\n\n    } else {\n      this.lastColourPicked++;\n\n    }\n    timingGraphObject.audioSources.push(new audioSource())\n    this.setState({ components: prevState });\n  }\n\n  delete(id) {\n    let prevState = this.state.components\n    let idIndex = prevState.findIndex(el => el === id);\n    prevState.splice(idIndex, 1);\n    graphObject.expressions.splice(idIndex, 1);\n    timingGraphObject.audioSources.splice(idIndex, 1);\n    this.setState({ components: prevState });\n    graphObject.GraphCalculator();\n  }\n  changeInstrument(id, newInstrumentNumber) {\n    let idIndex = this.state.components.findIndex(el => el === id);\n    timingGraphObject.audioSources[idIndex].changeInstrument(newInstrumentNumber);\n\n  }\n  changeDomain(id, newValue) {\n    let idIndex = this.state.components.findIndex(el => el === id);\n    graphObject.expressions[idIndex].domain = newValue;\n    graphObject.GraphCalculator();\n\n  }\n\n\n  render() {\n    return (\n\n      <InputBox components={this.state.components} deleteFunction={this.delete.bind(this)}\n        createFunction={this.create.bind(this)} changeInstrumentFunction={this.changeInstrument.bind(this)} changeDomainFunction={this.changeDomain.bind(this)}\n      />\n\n\n\n    )\n  }\n\n}\n\nclass InputBox extends React.Component { // where we type in the function and clear\n\n  constructor(props) {\n    super(props)\n    this.handleChangeDomain = this.handleChangeDomain.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleDeleteFunction = this.handleDelete.bind(this);\n\n\n  }\n  handleCreate(id) {\n    this.props.createFunction(id);\n\n  }\n  handleDelete(id) {\n    this.props.deleteFunction(id);\n  }\n\n  handleChangeDomain(id, newValue) {\n\n    this.props.changeDomainFunction(id, newValue);\n\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <ListGroup>\n\n          {\n            this.props.components.map(comp =>\n              <ListGroup.Item className=\"ListGroupItem\" key={comp}>\n                <div >\n                  <Input components={this.props.components} id={comp} deleteFunction={this.handleDeleteFunction} />\n                  {\n                    <ReactSlider\n                      defaultValue={[-1000, 1000]}\n                      max={1000}\n                      min={-1000}\n                      renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n                      onAfterChange={val => { this.handleChangeDomain(comp, val); }}\n                      className=\"horizontal-slider-twohandle\"\n                      thumbClassName=\"sliderThumbTwoHandle\"\n                      trackClassName=\"sliderTrack\"\n                      pearling={true}\n\n                    />\n                  }\n                  <InstrumentChooser id={comp} changeInstrumentFunction={this.props.changeInstrumentFunction} />\n\n                </div>\n              </ListGroup.Item>\n\n            )\n\n          }\n        </ListGroup>\n        <Button className=\"newFunctionButton\" variant=\"dark\" onClick={this.handleCreate.bind(this)}>{<i className=\"fa fa-plus\" aria-hidden=\"true\"></i>}</Button>\n\n        <Accordion className=\"HelpAccordion\">\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\" className=\"HelpButton\">\n                About\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                To make sounds, enter in any function with x as the only variable, like sin(x)*50 or x^3+x+24 or 400/x. A sound will be made where the vertical counting bar crosses any function.\n                <br />\n                <br />\n                The frequency of the sound will be the y value of the intersection of the function and vertical bar, this means that higher values will work better e.g sin(x)*50 rather than sin(x).\n                The Beats Per Screen slider at the top of screen amount of times the vertical bar will occur per screen.\n                The Time Per Beat slider controls the time between the vertical bar moving.\n                You can adjust the domain of the function with its slider below it, along with its instrument.\n                You can add as many functions as you like, click the plus button to create a new one, and the x button to delete one graph.\n                <br />\n                <br />\n\n                Just play around with it! Pick whatever instrument sounds interesting, fiddle around with the sliders\n                and make something that sounds cool!\n                <br />\n\n              </Card.Body>\n            </Accordion.Collapse>\n\n          </Card>\n\n        </Accordion>\n      </div >\n\n    )\n  }\n\n}\nclass InstrumentChooser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n  handleChange() {\n\n    let newAudioType = document.getElementById(this.props.id + \"audioType\").value;\n    this.props.changeInstrumentFunction(this.props.id, newAudioType);\n\n  }\n  render() {\n    return (\n      <Form.Control as=\"select\" onChange={this.handleChange} id={this.props.id + \"audioType\"}>\n        {\n          instrumentList.map((name, index) => {\n\n            return <option key={index} value={index}>{name}</option>\n\n          })\n        }\n      </Form.Control>\n\n\n\n    )\n  }\n\n}\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.idIndex = this.props.components.findIndex(el => el === this.props.id);\n    this.colour = graphObject.expressions[this.idIndex].colour;\n\n  }\n\n  handleChange(e) {\n\n\n    this.setState({ text: e.target.value });\n\n\n    graphObject.expressions[this.idIndex].expr = e.target.value.toLowerCase();\n    graphObject.expressions[this.idIndex].validity = false;\n    if (e.target.value === \"\") {\n      graphObject.expressions[this.idIndex].expr = \"\";\n      graphObject.expressions[this.idIndex].validity = false;\n      graphObject.GraphCalculator();\n    }\n    else if (graphObject.ExpressionValidifier(graphObject.expressions[this.idIndex].expr, this.idIndex) === true) {\n      graphObject.expressions[this.idIndex].validity = true;\n      graphObject.GraphCalculator();\n    }\n\n\n  }\n\n\n\n  render() {\n    return (\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text className=\"colourIndicator\" style={{ backgroundColor: this.colour }}> </InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          className=\"Input\"\n          isInvalid={!graphObject.expressions[this.idIndex].validity}\n          placeholder=\"Enter function e.g 3x + 70\"\n          type=\"text\"\n          value={this.state.text}\n          onChange={this.handleChange}\n        />\n\n        <MuteButton id={this.props.id} components={this.props.components} />\n\n        <DeleteButton id={this.props.id} deleteFunction={this.props.deleteFunction} />\n\n      </InputGroup >\n\n\n    )\n  }\n}\nclass DeleteButton extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.props.deleteFunction(this.props.id);\n  }\n  render() {\n    return (\n\n      <InputGroup.Append>\n\n        <Button variant=\"outline-dark\" onClick={this.handleClick}>{<i className=\"fa fa-times\" aria-hidden=\"true\"></i>}</Button>\n\n      </InputGroup.Append>\n\n\n    )\n  }\n\n}\nclass MuteButton extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = { iconToShow: \"fas fa-volume-up\", isMuted: false };\n\n\n  }\n\n\n  handleChange() {\n    let idIndex = this.props.components.findIndex(el => el === this.props.id);\n\n    if (this.state.isMuted === true) {\n      timingGraphObject.audioSources[idIndex].changeMuteToggle(false) // not muted\n      this.setState({ iconToShow: \"fas fa-volume-up\", isMuted: false });\n    }\n    else {\n      timingGraphObject.audioSources[idIndex].changeMuteToggle(true) // muted\n      this.setState({ iconToShow: \"fas fa-volume-mute\", isMuted: true });\n\n    }\n\n  }\n\n  render() {\n    return (\n\n\n      <InputGroup.Append>\n\n\n        <Button\n          variant=\"outline-dark\"\n\n\n          onClick={this.handleChange}\n        >\n          {<i className={this.state.iconToShow}></i>}\n        </Button>\n\n\n\n      </InputGroup.Append>\n\n\n    )\n  }\n\n}\n\n\n\nclass BPS extends React.Component {\n\n  constructor() {\n    super()\n    this.handleChangeBPS = this.handleChangeBPS.bind(this);\n    this.state = { value: 50 };\n\n  }\n\n  handleChangeBPS(newVal) {\n    this.setState({ value: newVal });\n    timingGraphObject.beatsPerScreen = newVal;\n\n  }\n\n\n  render() {\n    return (\n\n      <Form>\n        <Form.Group className=\"Slider\">\n          <Form.Label className=\"label\">Beats Per Screen</Form.Label>\n\n\n          <ReactSlider\n            defaultValue={this.state.value}\n            max={100}\n            min={1}\n            renderThumb={(props, state) => <div {...props}>{state.value}</div>}\n            onChange={val => { this.handleChangeBPS(val); }}\n            className=\"horizontal-slider-onehandle\"\n            thumbClassName=\"sliderThumb\"\n            trackClassName=\"sliderTrack\"\n\n\n          />\n\n        </Form.Group>\n\n      </Form>\n\n\n    )\n  }\n\n}\nclass TBB extends React.Component {\n\n  constructor() {\n    super()\n\n    this.handleChangeTBB = this.handleChangeTBB.bind(this);\n    this.state = { value: 500 };\n  }\n\n  handleChangeTBB(newVal) {\n    this.setState({ value: newVal });\n    timingGraphObject.timeBetweenBeats = newVal;\n\n  }\n\n  render() {\n    return (\n\n      <Form>\n        <Form.Group className=\"Slider\">\n          <Form.Label className=\"label\">Time Between Beats</Form.Label>\n\n          <ReactSlider\n            defaultValue={this.state.value}\n            max={1000}\n            min={100}\n            renderThumb={(props, state) => <div {...props}>{state.value / 1000 + \"s\"}</div>}\n            onChange={val => { this.handleChangeTBB(val); }}\n            className=\"horizontal-slider-onehandle\"\n            step={100}\n            thumbClassName=\"sliderThumb\"\n            trackClassName=\"sliderTrack\"\n\n\n          />\n        </Form.Group>\n\n      </Form>\n\n\n\n    )\n  }\n\n}\n\nclass Graphs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graphCanvasRef = React.createRef();\n    this.timingCanvasRef = React.createRef();\n    this.windowWidth = window.innerWidth;\n    this.dragCoords = {\n      x: 0,\n      y: 0\n    };\n    this.pointerEventArray = [];\n    this.prevPointDist = -1;\n    this.dragging = false\n    this.timesPerSecond = 60;\n    this.waiting = false;\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n    this.handleWheel = this.handleWheel.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n\n\n\n  }\n  componentDidMount() {\n    graphCanvas = this.graphCanvasRef.current;\n    graphContext = this.graphCanvasRef.current.getContext('2d');\n\n    timingCanvas = this.timingCanvasRef.current;\n    timingContext = this.timingCanvasRef.current.getContext('2d');\n\n    window.addEventListener(\"resize\", this.handleResize)\n\n  }\n  preventDefault(e) {\n    e.returnValue = false;\n  }\n  handleMouseEnter() {\n    document.addEventListener('wheel', this.preventDefault, {\n      passive: false,\n    })\n  }\n  handleMouseDown(e) {\n    e.persist();\n    this.pointerEventArray.push(e);\n    this.dragging = true;\n    this.dragCoords = {\n      x: e.clientX,\n      y: e.clientY\n    }\n  }\n  handleMouseMove(e) {\n\n    if (this.waiting === false && this.dragging === true) { // throttling\n\n\n      e.persist();\n      for (let i = 0; i < this.pointerEventArray.length; i++) { // for handling a pinch gesture\n        if (e.pointerId === this.pointerEventArray[i].pointerId) {\n          this.pointerEventArray[i] = e;\n\n          break;\n        }\n      }\n\n      if (this.pointerEventArray.length === 2) {\n        let curPointDist = Math.hypot(this.pointerEventArray[0].clientX - this.pointerEventArray[1].clientX, this.pointerEventArray[0].clientY - this.pointerEventArray[1].clientY);\n        if (this.prevPointDist > 0) {\n          if (curPointDist > this.prevPointDist) {\n\n            graphObject.Scale(0.9);\n\n          }\n          else if (curPointDist < this.prevPointDist) {\n\n            graphObject.Scale(1.1);\n\n          }\n        }\n\n\n        this.prevPointDist = curPointDist;\n        return;\n\n      }\n\n      if (this.dragging === true) {\n        graphObject.ShiftGraph(e.clientX - this.dragCoords.x, (this.dragCoords.y - e.clientY));\n\n        this.dragCoords = {\n          x: e.clientX,\n          y: e.clientY\n        }\n      }\n\n\n\n      this.waiting = true;\n      setTimeout(function () {\n        this.waiting = false;\n      }.bind(this), 1000 / this.timesPerSecond);\n\n    }\n\n  }\n  handleMouseUp(e) {\n    e.persist();\n    this.pointerEventArray = [];\n    for (let i = 0; i < this.pointerEventArray.length; i++) {\n      if (this.pointerEventArray[i].pointerId === e.pointerId) {\n        this.pointerEventArray.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.pointerEventArray.length < 2) {\n      this.prevPointDist = -1;\n    }\n\n    this.dragging = false\n\n  }\n  handleMouseOut() {\n    this.dragging = false\n    document.removeEventListener('wheel', this.preventDefault, false)\n  }\n\n\n  handleWheel(e) {\n    if (e.deltaY < 0) {\n      // Zoom in\n\n      graphObject.Scale(0.9);\n    }\n    else {\n      // Zoom out\n      graphObject.Scale(1.1);\n\n    }\n  }\n  handleResize() {\n    if (window.innerWidth !== this.windowWidth) { // makes resize only happen for width changes\n      this.windowWidth = window.innerWidth;\n      if (window.innerWidth < 992) { // if the window less than lg breakpoint\n        graphObject.WindowSizeChange(document.getElementById('graphwrapper').getBoundingClientRect().width, window.innerHeight * 0.5);\n\n      }\n      else {\n        graphObject.WindowSizeChange(window.innerWidth * 0.65, window.innerHeight);\n\n      }\n    }\n\n  }\n\n\n  render() {\n    return (\n\n      <div>\n\n        <canvas ref={this.graphCanvasRef} onPointerDown={this.handleMouseDown} onPointerMove={this.handleMouseMove}\n          onPointerUp={this.handleMouseUp} onPointerOut={this.handleMouseOut} onWheel={this.handleWheel} onPointerEnter={this.handleMouseEnter} className=\"graphCanvas\"> </canvas>\n\n        <canvas ref={this.timingCanvasRef} className=\"timingCanvas\"></canvas>\n\n      </div>\n    )\n  }\n}\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    graphObject.expressions = [new expressionConstructor(\"0\", [-1000, 1000], \"#000000\")]; // array of objects that gets all info about a certain expression colour, value and domains.\n    // initialised here so component in charge of displaying colour will know what's going on\n\n  }\n  componentDidMount() {\n    graphObject.Setup();\n    graphObject.DrawAxes();\n    timingGraphObject.Setup();\n  }\n  render() {\n\n\n    return (\n\n      <div>\n        <Container fluid className=\"bg\">\n          <Nav fill className=\"topbar \">\n\n            <Nav.Item>\n\n              <BPS />\n\n            </Nav.Item>\n            <Nav.Item>\n\n              <TBB />\n\n            </Nav.Item>\n\n          </Nav>\n\n          <Row>\n            <Col xs={12} lg={{ span: 4, order: 'first' }}>\n\n\n              <AllInputs />\n\n\n            </Col>\n\n            <Col xs={{ span: 12, order: 'first' }} lg={8} className=\"graphColumn\">\n              <div id=\"graphwrapper\">\n                <Graphs />\n\n              </div>\n\n            </Col>\n\n\n          </Row>\n\n\n\n        </Container>\n\n\n      </div >\n    )\n  }\n}\n\n\n\n\n\n\n\n\n//#endregion\n\nexport default App;"]},"metadata":{},"sourceType":"module"}