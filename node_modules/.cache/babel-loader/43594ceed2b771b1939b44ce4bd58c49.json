{"ast":null,"code":"'use strict';\n\nvar Synth = require('./webaudio-tinysynth');\n\nmodule.exports = Player;\n\nfunction Player(audioContext, destination) {\n  // params\n  var instMin = 0;\n  var instMax = 127;\n  var drumMin = 35;\n  var drumMax = 81; // internals\n\n  var synth = new Synth({\n    useReverb: 1,\n    quality: 1,\n    voices: 32\n  });\n\n  if (audioContext) {\n    synth.setAudioContext(audioContext, destination);\n  } // merge instruments and drums into one big list\n\n\n  var instCt = instMax - instMin + 1;\n  var drumCt = drumMax - drumMin + 1;\n  var names = [];\n\n  for (var i = 0; i < instCt; i++) {\n    names.push(synth.getTimbreName(0, i + instMin));\n  }\n\n  for (var j = 0; j < drumCt; j++) {\n    names.push(synth.getTimbreName(1, j + drumMin));\n  } // Properties\n\n\n  this._synth = synth;\n  this.names = names; // API\n\n  this.setQuality = function (q) {\n    synth.setQuality(q ? 1 : 0);\n  };\n\n  this.getCurrentTime = function () {\n    return synth.actx.currentTime;\n  };\n\n  this.play = function (inst, note, vel, delay, duration, channel, attack) {\n    inst = inst || 0;\n    if (inst < 0 || inst > instMax + drumCt) throw 'Invalid instrument';\n    note = note || 60;\n    delay = delay || 0;\n    if (isNaN(vel)) vel = 0.5;\n    if (isNaN(duration)) duration = 0.5;\n    if (delay < 0) delay = 0;\n    play_impl(inst, note, vel, delay, duration, channel, attack);\n  };\n\n  function play_impl(inst, note, vel, delay, duration, channel, attack) {\n    var isDrums = inst >= instCt; // use passed-in channel value, defaulting to 0\n\n    channel = channel | 0;\n\n    if (isDrums) {\n      // drums use channel 9, and determine instrument based on the note\n      channel = 9;\n      note = inst + drumMin - instCt;\n    } else {\n      inst -= instMin;\n      synth.setProgram(channel, inst);\n    } // play the note\n\n\n    var t = synth.actx.currentTime;\n    var intVel = 127 * vel | 0; // console.log([\n    //     'playing: ch=', channel,\n    //     '   inst=', inst,\n    //     '   note=', note,\n    //     '   intVel=', intVel,\n    //     '   delay=', delay,\n    // ].join(''))\n\n    var prog = synth.program[synth.pg[channel]].p;\n\n    if (note > 127) {\n      // assume note is a frequency in Hz if it's above 127\n      overrideParameter(prog, 'f', note);\n      overrideParameter(prog, 't', 0);\n    }\n\n    if (attack) overrideParameter(prog, 'a', attack); // actual play command\n\n    synth.noteOn(channel, note, intVel, t + delay);\n    synth.noteOff(channel, note, t + delay + duration); // undo overrides\n\n    if (note > 127) {\n      undoOverride(prog, 'f');\n      undoOverride(prog, 't');\n    }\n\n    if (attack) undoOverride(prog, 'a');\n  } // temporarily override a program's parameters, for *source* oscillators\n  // e.g. override(0, 'f', 500) sets oscillator.f = 500 \n  // for all (oscillator.g==0), and caches overriden values\n\n\n  function overrideParameter(prog, param, value) {\n    var cache = overridden[param] || [0, 0, 0, 0, 0];\n\n    for (var i = 0; i < prog.length; i++) {\n      var osc = prog[i];\n      if (osc.g !== 0) continue;\n      cache[i] = osc[param];\n      osc[param] = value;\n    }\n\n    overridden[param] = cache;\n  }\n\n  var overridden = {}; // undoes previous\n\n  function undoOverride(prog, param) {\n    var cache = overridden[param];\n\n    for (var i = 0; i < prog.length; i++) {\n      var osc = prog[i];\n      if (osc.g !== 0) continue;\n      osc[param] = cache[i];\n    }\n  }\n}","map":{"version":3,"sources":["/home/james/Documents/Coding Projects/Math.Sound/node_modules/webaudio-instruments/index.js"],"names":["Synth","require","module","exports","Player","audioContext","destination","instMin","instMax","drumMin","drumMax","synth","useReverb","quality","voices","setAudioContext","instCt","drumCt","names","i","push","getTimbreName","j","_synth","setQuality","q","getCurrentTime","actx","currentTime","play","inst","note","vel","delay","duration","channel","attack","isNaN","play_impl","isDrums","setProgram","t","intVel","prog","program","pg","p","overrideParameter","noteOn","noteOff","undoOverride","param","value","cache","overridden","length","osc","g"],"mappings":"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","sourcesContent":["'use strict'\n\nvar Synth = require('./webaudio-tinysynth')\n\nmodule.exports = Player\n\n\nfunction Player(audioContext, destination) {\n\n\n    // params\n    var instMin = 0\n    var instMax = 127\n    var drumMin = 35\n    var drumMax = 81\n\n\n\n    // internals\n    var synth = new Synth({\n        useReverb: 1,\n        quality: 1,\n        voices: 32,\n    })\n\n    if (audioContext) {\n        synth.setAudioContext(audioContext, destination)\n    }\n\n\n\n    // merge instruments and drums into one big list\n    var instCt = instMax - instMin + 1\n    var drumCt = drumMax - drumMin + 1\n    var names = []\n    for (var i = 0; i < instCt; i++) names.push(synth.getTimbreName(0, i + instMin))\n    for (var j = 0; j < drumCt; j++) names.push(synth.getTimbreName(1, j + drumMin))\n\n\n\n\n    // Properties\n    this._synth = synth\n    this.names = names\n\n\n\n\n    // API\n\n    this.setQuality = function (q) {\n        synth.setQuality(q ? 1 : 0)\n    }\n\n    this.getCurrentTime = function () {\n        return synth.actx.currentTime\n    }\n\n    this.play = function (inst, note, vel, delay, duration, channel, attack) {\n        inst = inst || 0\n        if (inst < 0 || inst > instMax + drumCt) throw 'Invalid instrument'\n        note = note || 60\n        delay = delay || 0\n        if (isNaN(vel)) vel = 0.5\n        if (isNaN(duration)) duration = 0.5\n        if (delay < 0) delay = 0\n        play_impl(inst, note, vel, delay, duration, channel, attack)\n    }\n\n\n    function play_impl(inst, note, vel, delay, duration, channel, attack) {\n        var isDrums = (inst >= instCt)\n        // use passed-in channel value, defaulting to 0\n        channel = channel | 0\n        if (isDrums) {\n            // drums use channel 9, and determine instrument based on the note\n            channel = 9\n            note = inst + drumMin - instCt\n        } else {\n            inst -= instMin\n            synth.setProgram(channel, inst)\n        }\n        // play the note\n        var t = synth.actx.currentTime\n        var intVel = (127 * vel) | 0\n\n        // console.log([\n        //     'playing: ch=', channel,\n        //     '   inst=', inst,\n        //     '   note=', note,\n        //     '   intVel=', intVel,\n        //     '   delay=', delay,\n        // ].join(''))\n\n        var prog = synth.program[synth.pg[channel]].p\n\n        if (note > 127) {\n            // assume note is a frequency in Hz if it's above 127\n            overrideParameter(prog, 'f', note)\n            overrideParameter(prog, 't', 0)\n        }\n        if (attack) overrideParameter(prog, 'a', attack)\n\n        // actual play command\n        synth.noteOn(channel, note, intVel, t + delay)\n        synth.noteOff(channel, note, t + delay + duration)\n\n        // undo overrides\n        if (note > 127) {\n            undoOverride(prog, 'f')\n            undoOverride(prog, 't')\n        }\n        if (attack) undoOverride(prog, 'a')\n\n    }\n\n\n\n\n\n    // temporarily override a program's parameters, for *source* oscillators\n    // e.g. override(0, 'f', 500) sets oscillator.f = 500 \n    // for all (oscillator.g==0), and caches overriden values\n\n    function overrideParameter(prog, param, value) {\n        var cache = overridden[param] || [0, 0, 0, 0, 0]\n        for (var i = 0; i < prog.length; i++) {\n            var osc = prog[i]\n            if (osc.g !== 0) continue\n            cache[i] = osc[param]\n            osc[param] = value\n        }\n        overridden[param] = cache\n    }\n    var overridden = {}\n\n    // undoes previous\n    function undoOverride(prog, param) {\n        var cache = overridden[param]\n        for (var i = 0; i < prog.length; i++) {\n            var osc = prog[i]\n            if (osc.g !== 0) continue\n            osc[param] = cache[i]\n        }\n    }\n\n\n\n\n\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"script"}