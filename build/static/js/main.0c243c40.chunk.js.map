{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["graphCanvas","graphContext","math","require","Instruments","restrictedMath","create","all","restrictedEvaluate","evaluate","import","override","timingCanvas","timingContext","graphObject","Setup","this","plotsPerScreen","numGrids","scaleColour","lineJoin","window","innerWidth","WindowSizeChange","document","getElementById","getBoundingClientRect","width","innerHeight","height","upperLimitX","lowerLimitX","upperLimitY","lowerLimitY","pointInterval","setTransform","fontSize","functionWidth","minorScaleWidth","zoomRatio","lineWidth","strokeStyle","ChangeDefaultScaling","GraphCalculator","Scale","Math","abs","ExpressionValidifier","exprText","idIndex","exprObject","parse","symbolNodes","filter","node","isSymbolNode","operatorNodes","isOperatorNode","functionNodes","isFunctionNode","i","length","args","name","isBinary","isUnary","expressions","derivative","toString","calculate","input","expression","x","curGradient","prevGradient","curY","prevY","ClearAll","DrawAxes","prevPointInterval","z","curExpression","expr","curDerivative","validity","beginPath","colour","moveTo","domain","lowerLimitOfLoop","upperLimitOfLoop","sign","lineTo","stroke","ratio","scale","save","clearRect","fillStyle","fillRect","restore","roundedlowerLimitX","floor","roundedupperLimitX","ceil","roundedlowerLimitY","roundedupperLimitY","font","y","fillText","ShiftGraph","shiftByX","shiftByY","transform","expressionConstructor","timingGraphObject","beatsPerScreen","timeBetweenBeats","beat","audioSources","audioSource","timer","audioSourcesToPlay","CalculateNextNote","setTimeout","MoveTimerBarAndPlay","timerBarPosition","round","muteToggle","newFreq","push","changeFrequency","isNaN","play","instrumentList","names","splice","instrumentNumber","frequency","player","newVal","newInstrumentNumber","AllInputs","state","components","IDCount","possibleColourArray","lastColourPicked","prevState","setState","id","findIndex","el","changeInstrument","newValue","deleteFunction","delete","bind","createFunction","changeInstrumentFunction","changeDomainFunction","changeDomain","React","Component","InputBox","props","handleChangeDomain","handleCreate","handleDeleteFunction","handleDelete","ListGroup","map","comp","Item","className","key","ReactSlider","defaultValue","max","min","renderThumb","valueNow","onAfterChange","val","thumbClassName","trackClassName","pearling","Button","variant","onClick","aria-hidden","Accordion","Card","Header","Toggle","as","eventKey","Collapse","Body","InstrumentChooser","handleChange","newAudioType","value","Form","Control","onChange","index","Input","text","e","target","toLowerCase","InputGroup","Prepend","Text","style","backgroundColor","isInvalid","placeholder","type","DeleteButton","handleClick","Append","MuteButton","iconToShow","isMuted","changeMuteToggle","BPS","handleChangeBPS","Group","Label","TBB","handleChangeTBB","step","Graphs","graphCanvasRef","createRef","timingCanvasRef","windowWidth","dragCoords","pointerEventArray","prevPointDist","dragging","timesPerSecond","waiting","handleMouseDown","handleMouseMove","handleMouseUp","handleMouseOut","handleWheel","handleResize","handleMouseEnter","current","getContext","addEventListener","returnValue","preventDefault","passive","persist","clientX","clientY","pointerId","curPointDist","hypot","removeEventListener","deltaY","ref","onPointerDown","onPointerMove","onPointerUp","onPointerOut","onWheel","onPointerEnter","App","Container","fluid","Nav","fill","Row","Col","xs","lg","span","order","PureComponent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c243c40.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { derivative, parse } from 'mathjs';\nimport ReactSlider from 'react-slider';\nimport { create, all } from 'mathjs';\nimport { Col, Container, ListGroup, Row, Nav, Form, Accordion, InputGroup, Button, Card } from 'react-bootstrap';\n\n//#region Graph Actions\n\nlet graphCanvas;\nlet graphContext;\n\n\nconst math = require('mathjs');\nconst Instruments = require('webaudio-instruments');\nconst restrictedMath = create(all)\nconst restrictedEvaluate = restrictedMath.evaluate;\nrestrictedMath.import({\n  'import': function () { return },\n  'createUnit': function () { return },\n  'evaluate': function () { return },\n  'parse': function () { return },\n  'simplify': function () { return },\n  'derivative': function () { return },\n\n}, { override: true })\n\n\n\n\nlet graphObject = { // main object, with all graphCanvas manipulation methods\n\n  Setup: function () {\n\n\n    this.plotsPerScreen = 400; //TODO allow this to change for different processor strengths\n    this.numGrids = 20; // number of grid markings\n\n    this.scaleColour = \"#000D34\";\n\n    graphContext.lineJoin = \"round\";\n\n    if (window.innerWidth < 992) {\n      this.WindowSizeChange(document.getElementById('graphwrapper').getBoundingClientRect().width, window.innerHeight * 0.5);\n    }\n    else {\n      this.WindowSizeChange(window.innerWidth * 0.65, window.innerHeight);\n\n    }\n\n  },\n  WindowSizeChange: function (width, height) {\n    graphCanvas.width = width;\n    graphCanvas.height = height;\n    timingCanvas.width = width;\n    timingCanvas.height = height;\n\n    this.upperLimitX = graphCanvas.width / 2;\n    this.lowerLimitX = -graphCanvas.width / 2;\n    this.upperLimitY = graphCanvas.height / 2;\n    this.lowerLimitY = -graphCanvas.height / 2;\n    this.pointInterval = graphCanvas.width / this.plotsPerScreen; // changes for balance of smoothness of line with time to compute, decrease with more zoom increase with less zoom, by default 1000 plots per screen\n\n    graphContext.setTransform(1, 0, 0, -1, graphCanvas.width / 2, graphCanvas.height / 2); // inverts y-axis in order to increase as you move further up as in the cartesian plane\n    this.fontSize = 10;\n    this.functionWidth = \"0.5\";\n    this.minorScaleWidth = \"0.1\";\n    this.zoomRatio = 1; // each pixel equals one unit at the start\n    timingContext.lineWidth = 2;\n    timingContext.strokeStyle = \"#56DACC\";\n\n    this.ChangeDefaultScaling()\n\n    this.GraphCalculator();\n\n  },\n  ChangeDefaultScaling() {\n    if (this.lowerLimitX < -1000 || this.upperLimitX > 1000) {\n      this.Scale(2000 / (Math.abs(this.upperLimitX) + Math.abs(this.lowerLimitX)))\n\n    }\n\n  },\n  ExpressionValidifier(exprText, idIndex) { // checks expression before making calculations to avoid wasting resources\n    let exprObject;\n    try { // first test is to try and parse the expression\n      exprObject = parse(exprText)\n\n\n\n    } catch {\n      return false;\n    }\n    // second test is to see if all variables are x\n\n    let symbolNodes = exprObject.filter(function (node) {\n      return node.isSymbolNode\n    })\n    let operatorNodes = exprObject.filter(function (node) {\n      return node.isOperatorNode;\n    })\n    let functionNodes = exprObject.filter(function (node) {\n      return node.isFunctionNode;\n    })\n    // since symbolnodes are used for variables and functions, we must check that all symbolnodes are\n    // either x or a function, also check that no operation is done that has a symbolnode that is not x\n    for (let i = 0; i < functionNodes.length; i++) {\n      if (functionNodes[i].args.length < 1) {\n\n        return false;\n      }\n    }\n    if (symbolNodes.length > 0) {\n\n      for (let i = 0; i < symbolNodes.length; i++) {\n\n        if (symbolNodes[i].name === 'x' || symbolNodes[i].name in math) {\n\n\n        }\n        else {\n          return false;\n        }\n\n      }\n      for (let i = 0; i < operatorNodes.length; i++) { // check that no operation is done with non x symbolnode, otherwise tan * 4 etc would break it\n        if (operatorNodes[i].isBinary()) {\n          if (operatorNodes[i].args[0].isSymbolNode && operatorNodes[i].args[0].name !== 'x') {\n            return false;\n          }\n          if (operatorNodes[i].args[1].isSymbolNode && operatorNodes[i].args[1].name !== 'x') {\n            return false;\n          }\n        }\n        if (operatorNodes[i].isUnary()) { // protests from x! as no negative factorials allowed\n          if (operatorNodes[i].args[0].isSymbolNode) {\n\n            return false;\n          }\n\n        }\n\n      }\n\n    }\n\n\n    //tests passed, expression valid\n\n    // get the derivative as well and add it as a property\n\n    try {\n      graphObject.expressions[idIndex].derivative = derivative(exprObject, \"x\").toString();\n\n    }\n    catch {\n    }\n\n\n\n    return true\n\n\n  },\n\n  calculate: function (input, expression) {\n\n    const scope = {\n      x: input\n    }\n\n    return restrictedEvaluate(expression, scope);\n\n\n  }\n  ,\n\n  GraphCalculator: function () { // drawing your own graphs \n    this.ClearAll();\n    this.DrawAxes();\n\n    let curGradient;\n    let prevGradient;\n\n    let curY;\n    let prevY;\n\n    let prevPointInterval = this.pointInterval;\n    graphContext.lineWidth = graphObject.functionWidth;\n\n    for (let z = 0; z < this.expressions.length; z++) {\n\n      let curExpression = this.expressions[z].expr;\n      let curDerivative = this.expressions[z].derivative;\n      if (this.expressions[z].validity === true) {\n\n        graphContext.beginPath();\n        graphContext.strokeStyle = this.expressions[z].colour;\n        graphContext.moveTo(this.expressions[z].domain[0], this.calculate(this.expressions[z].domain[0], curExpression));\n\n        let lowerLimitOfLoop;\n        let upperLimitOfLoop;\n        if (this.expressions[z].domain[0] > this.lowerLimitX) { // checks if domain or edge of canvas is closer and sets it to the limits of the loop\n          lowerLimitOfLoop = this.expressions[z].domain[0];\n        } else {\n          lowerLimitOfLoop = this.lowerLimitX;\n        }\n        if (this.expressions[z].domain[1] < this.upperLimitX) {\n          upperLimitOfLoop = this.expressions[z].domain[1];\n        } else {\n          upperLimitOfLoop = this.upperLimitX;\n        }\n\n        for (let i = lowerLimitOfLoop; i < upperLimitOfLoop; i += this.pointInterval) {\n\n          curY = this.calculate(i, curExpression)\n          curGradient = this.calculate(i, curDerivative);\n\n          if (Math.sign(curGradient) === -1 && Math.sign(prevGradient) === -1 && curY > prevY) {\n            graphContext.lineTo(i, -10000);\n            graphContext.stroke();\n            graphContext.beginPath();\n            graphContext.moveTo(i + 0.001, 10000);\n          }\n          else if (Math.sign(curGradient) === 1 && Math.sign(prevGradient) === 1 && curY < prevY) {\n            graphContext.lineTo(i, 10000);\n            graphContext.stroke();\n            graphContext.beginPath();\n            graphContext.moveTo(i + 0.001, -10000);\n\n          }\n          else {\n            graphContext.lineTo(i, curY);\n\n          }\n\n\n          prevY = curY;\n          prevGradient = curGradient;\n\n\n\n\n        }\n\n        graphContext.stroke();\n        this.pointInterval = prevPointInterval;\n\n      }\n\n    }\n\n  },\n\n\n  Scale: function (ratio) {\n    if (this.upperLimitX * ratio > 1000) {\n      ratio = 1000 / this.upperLimitX\n    }\n    if (this.lowerLimitX * ratio < -1000) {\n      ratio = -1000 / this.lowerLimitX\n\n    }\n    this.pointInterval *= ratio;\n    this.zoomRatio *= ratio;\n    this.fontSize *= ratio;\n    graphContext.scale(1 / ratio, 1 / ratio);\n    this.lowerLimitX *= ratio;\n\n    this.upperLimitX *= ratio;\n    this.lowerLimitY *= ratio;\n    this.upperLimitY *= ratio;\n    this.functionWidth *= ratio;\n    this.minorScaleWidth *= ratio;\n    this.GraphCalculator();\n\n  },\n  ClearAll: function () {\n    graphContext.save();\n    graphContext.setTransform(1, 0, 0, 1, 0, 0);\n    graphContext.clearRect(0, 0, graphCanvas.width, graphCanvas.height);\n    graphContext.fillStyle = \"white\";\n    graphContext.fillRect(0, 0, graphCanvas.width, graphCanvas.height);\n    graphContext.restore();\n  },\n\n  DrawAxes: function () {\n\n    graphContext.beginPath(); // axes\n    graphContext.strokeStyle = graphObject.scaleColour;\n    graphContext.lineWidth = graphObject.functionWidth;\n\n    graphContext.moveTo(this.lowerLimitX, 0);\n    graphContext.lineTo(this.upperLimitX, 0);\n\n    graphContext.moveTo(0, this.upperLimitY);\n    graphContext.lineTo(0, this.lowerLimitY);\n\n    graphContext.stroke();\n\n\n    const roundedlowerLimitX = Math.floor(this.lowerLimitX / 1000) * 1000; // setup for minor axes\n    const roundedupperLimitX = Math.ceil(this.upperLimitX / 1000) * 1000;\n    const roundedlowerLimitY = Math.floor(this.lowerLimitY / 1000) * 1000;\n    const roundedupperLimitY = Math.ceil(this.upperLimitY / 1000) * 1000;\n\n\n    graphContext.font = this.fontSize + 'px sans-serif';\n    graphContext.fillStyle = graphObject.scaleColour;\n    graphContext.lineWidth = graphObject.minorScaleWidth;\n\n\n    for (let x = roundedlowerLimitX; x < roundedupperLimitX; x += 100) { // minor axes\n\n      graphContext.moveTo(x, this.upperLimitY);\n      graphContext.lineTo(x, this.lowerLimitY);\n\n\n    }\n\n    for (let y = roundedlowerLimitY; y < roundedupperLimitY; y += 100) {\n\n      graphContext.moveTo(this.lowerLimitX, y);\n      graphContext.lineTo(this.upperLimitX, y);\n\n    }\n\n    graphContext.stroke();\n\n    graphContext.save();\n    graphContext.scale(1, -1);\n\n\n    for (let x = roundedlowerLimitX; x < roundedupperLimitX; x += 100) { // numbering\n\n\n      graphContext.fillText(x, x, -1);\n\n    }\n\n    for (let y = roundedlowerLimitY; y < roundedupperLimitY; y += 100) { // numbering\n\n\n      graphContext.fillText(y, 1, -y);\n\n    }\n\n    graphContext.restore();\n\n\n  },\n  ShiftGraph: function (shiftByX, shiftByY) {\n\n    shiftByX *= this.zoomRatio;\n    shiftByY *= this.zoomRatio;\n    if (this.upperLimitX - shiftByX > 1000) {\n      shiftByX = 0\n    }\n    if (this.lowerLimitX - shiftByX < -1000) {\n      shiftByX = 0\n\n    }\n\n\n    graphContext.transform(1, 0, 0, 1, shiftByX, shiftByY);\n    this.upperLimitX -= shiftByX;\n    this.lowerLimitX -= shiftByX;\n    this.upperLimitY -= shiftByY;\n    this.lowerLimitY -= shiftByY;\n    this.GraphCalculator();\n\n\n  },\n\n\n}\n\nclass expressionConstructor {\n  constructor(expr, domain, colour) {\n    this.expr = expr;\n    this.domain = domain\n    this.colour = colour\n  }\n\n}\n//#endregion\n\n\n//#region Timing graph\nlet timingCanvas;\nlet timingContext;\n\n\nlet timingGraphObject = {\n  Setup: function () {\n\n\n    this.beatsPerScreen = 8 + 1; // one less than true\n    this.timeBetweenBeats = 1000; // in milliseconds\n    this.beat = 1;\n    this.audioSources = [new audioSource()]; // default first instrument/graph\n    this.timer = 0;\n    this.audioSourcesToPlay = [];\n    this.CalculateNextNote();\n\n\n  },\n  CalculateNextNote() {\n    this.timer = setTimeout(() => {\n      this.MoveTimerBarAndPlay();\n    }, this.timeBetweenBeats);\n\n\n    if (this.beat >= this.beatsPerScreen) {\n      this.beat = 1;\n    }\n\n    this.beat++;\n    let timerBarPosition = Math.round(graphObject.lowerLimitX + (graphObject.upperLimitX - graphObject.lowerLimitX) / this.beatsPerScreen * (this.beat))\n\n    for (let i = 0; i < this.audioSources.length; i++) {\n      if (graphObject.expressions[i].validity === true && timerBarPosition >= graphObject.expressions[i].domain[0] && timerBarPosition <= graphObject.expressions[i].domain[1] && this.audioSources[i].muteToggle === false) {\n        let newFreq = graphObject.calculate(timerBarPosition, graphObject.expressions[i].expr);\n        this.audioSourcesToPlay.push(this.audioSources[i]);\n        if (newFreq <= -12000) {\n          this.audioSources[i].changeFrequency(-12000);\n\n        }\n        else if (newFreq >= 12000) {\n          this.audioSources[i].changeFrequency(12000);\n\n\n        }\n        else if (isNaN(newFreq) === false) {\n          this.audioSources[i].changeFrequency(newFreq);\n\n\n        }\n\n      }\n    }\n\n\n\n  },\n  MoveTimerBarAndPlay() {\n    timingContext.clearRect(0, 0, graphCanvas.width, graphCanvas.height);\n\n    timingContext.beginPath();\n    timingContext.moveTo(graphCanvas.width / this.beatsPerScreen * this.beat, 0);\n    timingContext.lineTo(graphCanvas.width / this.beatsPerScreen * this.beat, graphCanvas.height);\n    timingContext.stroke();\n\n    for (let i = 0; i < this.audioSourcesToPlay.length; i++) {\n      timingGraphObject.audioSourcesToPlay[i].play();\n    }\n    this.audioSourcesToPlay = [];\n\n\n    this.CalculateNextNote();\n  }\n}\n//#endregion\n\n//#region Audio\n\nlet instrumentList = new Instruments().names.splice(0, 127);\n\nclass audioSource {\n  constructor() {\n\n    this.instrumentNumber = 0; // default\n    this.frequency = 0;\n    this.player = new Instruments();\n    this.muteToggle = false;\n\n\n  }\n  play() {\n    if (this.muteToggle === false) {\n      this.player.play(this.instrumentNumber, this.frequency, 1, 0, 0.5)\n\n\n    }\n\n  }\n  changeFrequency(newFreq) {\n\n    this.frequency = Math.abs(newFreq);\n  }\n  changeMuteToggle(newVal) {\n    this.muteToggle = newVal;\n  }\n  changeInstrument(newInstrumentNumber) {\n\n\n    this.instrumentNumber = newInstrumentNumber;\n  }\n\n\n\n}\n\n//#endregion\n\n//#region React components\nclass AllInputs extends React.Component {\n\n  constructor() {\n    super()\n    this.state = { components: [0] };\n    this.IDCount = 0;\n    this.possibleColourArray = [\"#2F2980\", \"#0476D9\", \"#56DACC\", \"#8C186D\", \"#F23535\", \"#ffffff\"]\n    this.lastColourPicked = 0;\n  }\n  create() {\n    let prevState = this.state.components;\n    this.IDCount++;\n    prevState.push(this.IDCount)\n    graphObject.expressions.push(new expressionConstructor(\"\", [-1000, 1000], this.possibleColourArray[this.lastColourPicked]));\n    if (this.lastColourPicked === 4) {\n      this.lastColourPicked = 0;\n\n    } else {\n      this.lastColourPicked++;\n\n    }\n    timingGraphObject.audioSources.push(new audioSource())\n    this.setState({ components: prevState });\n  }\n\n  delete(id) {\n    let prevState = this.state.components\n    let idIndex = prevState.findIndex(el => el === id);\n    prevState.splice(idIndex, 1);\n    graphObject.expressions.splice(idIndex, 1);\n    timingGraphObject.audioSources.splice(idIndex, 1);\n    this.setState({ components: prevState });\n    graphObject.GraphCalculator();\n  }\n  changeInstrument(id, newInstrumentNumber) {\n    let idIndex = this.state.components.findIndex(el => el === id);\n    timingGraphObject.audioSources[idIndex].changeInstrument(newInstrumentNumber);\n\n  }\n  changeDomain(id, newValue) {\n    let idIndex = this.state.components.findIndex(el => el === id);\n    graphObject.expressions[idIndex].domain = newValue;\n    graphObject.GraphCalculator();\n\n  }\n\n\n  render() {\n    return (\n\n      <InputBox components={this.state.components} deleteFunction={this.delete.bind(this)}\n        createFunction={this.create.bind(this)} changeInstrumentFunction={this.changeInstrument.bind(this)} changeDomainFunction={this.changeDomain.bind(this)}\n      />\n\n\n\n    )\n  }\n\n}\n\nclass InputBox extends React.Component { // where we type in the function and clear\n\n  constructor(props) {\n    super(props)\n    this.handleChangeDomain = this.handleChangeDomain.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleDeleteFunction = this.handleDelete.bind(this);\n\n\n  }\n  handleCreate(id) {\n    this.props.createFunction(id);\n\n  }\n  handleDelete(id) {\n    this.props.deleteFunction(id);\n  }\n\n  handleChangeDomain(id, newValue) {\n\n    this.props.changeDomainFunction(id, newValue);\n\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <ListGroup>\n\n          {\n            this.props.components.map(comp =>\n              <ListGroup.Item className=\"ListGroupItem\" key={comp}>\n                <div >\n                  <Input components={this.props.components} id={comp} deleteFunction={this.handleDeleteFunction} />\n                  {\n                    <ReactSlider\n                      defaultValue={[-1000, 1000]}\n                      max={1000}\n                      min={-1000}\n                      renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n                      onAfterChange={val => { this.handleChangeDomain(comp, val); }}\n                      className=\"horizontal-slider-twohandle\"\n                      thumbClassName=\"sliderThumbTwoHandle\"\n                      trackClassName=\"sliderTrack\"\n                      pearling={true}\n\n                    />\n                  }\n                  <InstrumentChooser id={comp} changeInstrumentFunction={this.props.changeInstrumentFunction} />\n\n                </div>\n              </ListGroup.Item>\n\n            )\n\n          }\n        </ListGroup>\n        <Button className=\"newFunctionButton\" variant=\"dark\" onClick={this.handleCreate.bind(this)}>{<i className=\"fa fa-plus\" aria-hidden=\"true\"></i>}</Button>\n\n        <Accordion className=\"HelpAccordion\">\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\" className=\"HelpButton\">\n                About\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                To make sounds, enter in any function with x as the only variable, like sin(x)*50 or x^3+x+24 or 400/x. A sound will be made where the vertical counting bar crosses any function.\n                <br />\n                <br />\n                The frequency of the sound will be the y value of the intersection of the function and vertical bar, this means that higher values will work better e.g sin(x)*50 rather than sin(x).\n                The Beats Per Screen slider at the top of screen amount of times the vertical bar will occur per screen.\n                The Time Per Beat slider controls the time between the vertical bar moving.\n                You can adjust the domain of the function with its slider below it, along with its instrument.\n                You can add as many functions as you like, click the plus button to create a new one, and the x button to delete one graph.\n                <br />\n                <br />\n\n                Just play around with it! Pick whatever instrument sounds interesting, fiddle around with the sliders\n                and make something that sounds cool!\n                <br />\n\n              </Card.Body>\n            </Accordion.Collapse>\n\n          </Card>\n\n        </Accordion>\n      </div >\n\n    )\n  }\n\n}\nclass InstrumentChooser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n  handleChange() {\n\n    let newAudioType = document.getElementById(this.props.id + \"audioType\").value;\n    this.props.changeInstrumentFunction(this.props.id, newAudioType);\n\n  }\n  render() {\n    return (\n      <Form.Control as=\"select\" onChange={this.handleChange} id={this.props.id + \"audioType\"}>\n        {\n          instrumentList.map((name, index) => {\n\n            return <option key={index} value={index}>{name}</option>\n\n          })\n        }\n      </Form.Control>\n\n\n\n    )\n  }\n\n}\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.idIndex = this.props.components.findIndex(el => el === this.props.id);\n    this.colour = graphObject.expressions[this.idIndex].colour;\n    this.validity = false;\n\n  }\n\n  handleChange(e) {\n\n    this.idIndex =this.props.components.findIndex(el => el === this.props.id);\n    this.setState({ text: e.target.value });\n\n\n    graphObject.expressions[this.idIndex].expr = e.target.value.toLowerCase();\n    graphObject.expressions[this.idIndex].validity = false;\n    this.validity = false;\n    if (e.target.value === \"\") {\n      graphObject.expressions[this.idIndex].expr = \"\";\n      graphObject.expressions[this.idIndex].validity = false;\n      this.validity = false;\n      graphObject.GraphCalculator();\n    }\n    else if (graphObject.ExpressionValidifier(graphObject.expressions[this.idIndex].expr, this.idIndex) === true) {\n      graphObject.expressions[this.idIndex].validity = true;\n      this.validity = true;\n      graphObject.GraphCalculator();\n    }\n\n\n  }\n\n\n\n  render() {\n    return (\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text className=\"colourIndicator\" style={{ backgroundColor: this.colour }}> </InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          className=\"Input\"\n          isInvalid={!this.validity}\n          placeholder=\"Enter function e.g 3x + 70\"\n          type=\"text\"\n          value={this.state.text}\n          onChange={this.handleChange}\n        />\n\n        <MuteButton id={this.props.id} components={this.props.components} />\n\n        <DeleteButton id={this.props.id} deleteFunction={this.props.deleteFunction} />\n\n      </InputGroup >\n\n\n    )\n  }\n}\nclass DeleteButton extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.props.deleteFunction(this.props.id);\n  }\n  render() {\n    return (\n\n      <InputGroup.Append>\n\n        <Button variant=\"outline-dark\" onClick={this.handleClick}>{<i className=\"fa fa-times\" aria-hidden=\"true\"></i>}</Button>\n\n      </InputGroup.Append>\n\n\n    )\n  }\n\n}\nclass MuteButton extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = { iconToShow: \"fas fa-volume-up\", isMuted: false };\n\n\n  }\n\n\n  handleChange() {\n    let idIndex = this.props.components.findIndex(el => el === this.props.id);\n\n    if (this.state.isMuted === true) {\n      timingGraphObject.audioSources[idIndex].changeMuteToggle(false) // not muted\n      this.setState({ iconToShow: \"fas fa-volume-up\", isMuted: false });\n    }\n    else {\n      timingGraphObject.audioSources[idIndex].changeMuteToggle(true) // muted\n      this.setState({ iconToShow: \"fas fa-volume-mute\", isMuted: true });\n\n    }\n\n  }\n\n  render() {\n    return (\n\n\n      <InputGroup.Append>\n\n\n        <Button\n          variant=\"outline-dark\"\n\n\n          onClick={this.handleChange}\n        >\n          {<i className={this.state.iconToShow}></i>}\n        </Button>\n\n\n\n      </InputGroup.Append>\n\n\n    )\n  }\n\n}\n\n\n\nclass BPS extends React.Component {\n\n  constructor() {\n    super()\n    this.handleChangeBPS = this.handleChangeBPS.bind(this);\n    this.state = { value: 50 };\n\n  }\n\n  handleChangeBPS(newVal) {\n    this.setState({ value: newVal });\n    timingGraphObject.beatsPerScreen = newVal;\n\n  }\n\n\n  render() {\n    return (\n\n      <Form>\n        <Form.Group className=\"Slider\">\n          <Form.Label className=\"label\">Beats Per Screen</Form.Label>\n\n\n          <ReactSlider\n            defaultValue={this.state.value}\n            max={100}\n            min={1}\n            renderThumb={(props, state) => <div {...props}>{state.value}</div>}\n            onChange={val => { this.handleChangeBPS(val); }}\n            className=\"horizontal-slider-onehandle\"\n            thumbClassName=\"sliderThumb\"\n            trackClassName=\"sliderTrack\"\n\n\n          />\n\n        </Form.Group>\n\n      </Form>\n\n\n    )\n  }\n\n}\nclass TBB extends React.Component {\n\n  constructor() {\n    super()\n\n    this.handleChangeTBB = this.handleChangeTBB.bind(this);\n    this.state = { value: 500 };\n  }\n\n  handleChangeTBB(newVal) {\n    this.setState({ value: newVal });\n    timingGraphObject.timeBetweenBeats = newVal;\n\n  }\n\n  render() {\n    return (\n\n      <Form>\n        <Form.Group className=\"Slider\">\n          <Form.Label className=\"label\">Time Between Beats</Form.Label>\n\n          <ReactSlider\n            defaultValue={this.state.value}\n            max={1000}\n            min={100}\n            renderThumb={(props, state) => <div {...props}>{state.value / 1000 + \"s\"}</div>}\n            onChange={val => { this.handleChangeTBB(val); }}\n            className=\"horizontal-slider-onehandle\"\n            step={100}\n            thumbClassName=\"sliderThumb\"\n            trackClassName=\"sliderTrack\"\n\n\n          />\n        </Form.Group>\n\n      </Form>\n\n\n\n    )\n  }\n\n}\n\nclass Graphs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.graphCanvasRef = React.createRef();\n    this.timingCanvasRef = React.createRef();\n    this.windowWidth = window.innerWidth;\n    this.dragCoords = {\n      x: 0,\n      y: 0\n    };\n    this.pointerEventArray = [];\n    this.prevPointDist = -1;\n    this.dragging = false\n    this.timesPerSecond = 60;\n    this.waiting = false;\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n    this.handleWheel = this.handleWheel.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n\n\n\n  }\n  componentDidMount() {\n    graphCanvas = this.graphCanvasRef.current;\n    graphContext = this.graphCanvasRef.current.getContext('2d');\n\n    timingCanvas = this.timingCanvasRef.current;\n    timingContext = this.timingCanvasRef.current.getContext('2d');\n\n    window.addEventListener(\"resize\", this.handleResize)\n\n  }\n  preventDefault(e) {\n    e.returnValue = false;\n  }\n  handleMouseEnter() {\n    document.addEventListener('wheel', this.preventDefault, {\n      passive: false,\n    })\n  }\n  handleMouseDown(e) {\n    e.persist();\n    this.pointerEventArray.push(e);\n    this.dragging = true;\n    this.dragCoords = {\n      x: e.clientX,\n      y: e.clientY\n    }\n  }\n  handleMouseMove(e) {\n\n    if (this.waiting === false && this.dragging === true) { // throttling\n\n\n      e.persist();\n      for (let i = 0; i < this.pointerEventArray.length; i++) { // for handling a pinch gesture\n        if (e.pointerId === this.pointerEventArray[i].pointerId) {\n          this.pointerEventArray[i] = e;\n\n          break;\n        }\n      }\n\n      if (this.pointerEventArray.length === 2) {\n        let curPointDist = Math.hypot(this.pointerEventArray[0].clientX - this.pointerEventArray[1].clientX, this.pointerEventArray[0].clientY - this.pointerEventArray[1].clientY);\n        if (this.prevPointDist > 0) {\n          if (curPointDist > this.prevPointDist) {\n\n            graphObject.Scale(0.9);\n\n          }\n          else if (curPointDist < this.prevPointDist) {\n\n            graphObject.Scale(1.1);\n\n          }\n        }\n\n\n        this.prevPointDist = curPointDist;\n        return;\n\n      }\n\n      if (this.dragging === true) {\n        graphObject.ShiftGraph(e.clientX - this.dragCoords.x, (this.dragCoords.y - e.clientY));\n\n        this.dragCoords = {\n          x: e.clientX,\n          y: e.clientY\n        }\n      }\n\n\n\n      this.waiting = true;\n      setTimeout(function () {\n        this.waiting = false;\n      }.bind(this), 1000 / this.timesPerSecond);\n\n    }\n\n  }\n  handleMouseUp(e) {\n    e.persist();\n    this.pointerEventArray = [];\n    for (let i = 0; i < this.pointerEventArray.length; i++) {\n      if (this.pointerEventArray[i].pointerId === e.pointerId) {\n        this.pointerEventArray.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.pointerEventArray.length < 2) {\n      this.prevPointDist = -1;\n    }\n\n    this.dragging = false\n\n  }\n  handleMouseOut() {\n    this.dragging = false\n    document.removeEventListener('wheel', this.preventDefault, false)\n  }\n\n\n  handleWheel(e) {\n    if (e.deltaY < 0) {\n      // Zoom in\n\n      graphObject.Scale(0.9);\n    }\n    else {\n      // Zoom out\n      graphObject.Scale(1.1);\n\n    }\n  }\n  handleResize() {\n    if (window.innerWidth !== this.windowWidth) { // makes resize only happen for width changes\n      this.windowWidth = window.innerWidth;\n      if (window.innerWidth < 992) { // if the window less than lg breakpoint\n        graphObject.WindowSizeChange(document.getElementById('graphwrapper').getBoundingClientRect().width, window.innerHeight * 0.5);\n\n      }\n      else {\n        graphObject.WindowSizeChange(window.innerWidth * 0.65, window.innerHeight);\n\n      }\n    }\n\n  }\n\n\n  render() {\n    return (\n\n      <div>\n\n        <canvas ref={this.graphCanvasRef} onPointerDown={this.handleMouseDown} onPointerMove={this.handleMouseMove}\n          onPointerUp={this.handleMouseUp} onPointerOut={this.handleMouseOut} onWheel={this.handleWheel} onPointerEnter={this.handleMouseEnter} className=\"graphCanvas\"> </canvas>\n\n        <canvas ref={this.timingCanvasRef} className=\"timingCanvas\"></canvas>\n\n      </div>\n    )\n  }\n}\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    graphObject.expressions = [new expressionConstructor(\"0\", [-1000, 1000], \"#000000\")]; // array of objects that gets all info about a certain expression colour, value and domains.\n    // initialised here so component in charge of displaying colour will know what's going on\n\n  }\n  componentDidMount() {\n    graphObject.Setup();\n    graphObject.DrawAxes();\n    timingGraphObject.Setup();\n  }\n  render() {\n\n\n    return (\n\n      <div>\n        <Container fluid className=\"bg\">\n          <Nav fill className=\"topbar \">\n\n            <Nav.Item>\n\n              <BPS />\n\n            </Nav.Item>\n            <Nav.Item>\n\n              <TBB />\n\n            </Nav.Item>\n\n          </Nav>\n\n          <Row>\n            <Col xs={12} lg={{ span: 4, order: 'first' }}>\n\n\n              <AllInputs />\n\n\n            </Col>\n\n            <Col xs={{ span: 12, order: 'first' }} lg={8} className=\"graphColumn\">\n              <div id=\"graphwrapper\">\n                <Graphs />\n\n              </div>\n\n            </Col>\n\n\n          </Row>\n\n\n\n        </Container>\n\n\n      </div >\n    )\n  }\n}\n\n\n\n\n\n\n\n\n//#endregion\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}